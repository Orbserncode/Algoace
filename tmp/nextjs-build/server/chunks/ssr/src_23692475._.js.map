{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, children, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </tr>\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGL,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/services/datasets-service.ts"],"sourcesContent":["// src/services/datasets-service.ts\n\n/**\n * Service for managing datasets used for backtesting and agent recommendations\n */\n\nexport interface Dataset {\n  id: string;\n  name: string;\n  description: string;\n  category: DatasetCategory;\n  subcategory: string;\n  source: string;\n  format: 'csv' | 'json' | 'parquet' | 'other';\n  size: number; // in KB\n  lastUpdated: string;\n  path: string;\n  metadata: Record<string, any>;\n  tags: string[];\n}\n\nexport interface AgentRecommendation {\n  id: string;\n  timestamp: string;\n  agentId: string;\n  agentName: string;\n  datasetId: string;\n  datasetName: string;\n  type: 'sentiment' | 'price_prediction' | 'strategy_suggestion' | 'risk_assessment' | 'other';\n  content: Record<string, any>;\n  confidence: number;\n  tags: string[];\n}\n\nexport type DatasetCategory = \n  | 'forex' \n  | 'crypto' \n  | 'futures' \n  | 'stocks' \n  | 'commodities' \n  | 'indices' \n  | 'other';\n\nexport interface DatasetSubcategory {\n  id: string;\n  name: string;\n  category: DatasetCategory;\n  description: string;\n}\n\n// API base URL - use /api prefix to rely on Next.js rewrites\nconst API_BASE_URL = '/api';\n\n// Get all datasets\nexport async function getDatasets(): Promise<Dataset[]> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets/`);\n    if (!response.ok) {\n      throw new Error(`Error fetching datasets: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Failed to fetch datasets:', error);\n    throw error;\n  }\n}\n\n// Get datasets by category\nexport async function getDatasetsByCategory(category: DatasetCategory): Promise<Dataset[]> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets?category=${category}`);\n    if (!response.ok) {\n      throw new Error(`Error fetching datasets by category: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to fetch datasets for category ${category}:`, error);\n    throw error;\n  }\n}\n\n// Get dataset by ID\nexport async function getDatasetById(id: string): Promise<Dataset | null> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets/${id}`);\n    if (!response.ok) {\n      if (response.status === 404) {\n        return null;\n      }\n      throw new Error(`Error fetching dataset: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to fetch dataset with ID ${id}:`, error);\n    return null;\n  }\n}\n\n// Create a new dataset\nexport async function createDataset(dataset: Omit<Dataset, 'id'>): Promise<Dataset | null> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(dataset),\n    });\n    if (!response.ok) {\n      throw new Error(`Error creating dataset: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Failed to create dataset:', error);\n    return null;\n  }\n}\n\n// Update a dataset\nexport async function updateDataset(id: string, updates: Partial<Dataset>): Promise<Dataset | null> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updates),\n    });\n    if (!response.ok) {\n      throw new Error(`Error updating dataset: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to update dataset with ID ${id}:`, error);\n    return null;\n  }\n}\n\n// Delete a dataset\nexport async function deleteDataset(id: string, deleteFile: boolean = false): Promise<boolean> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets/${id}?delete_file=${deleteFile}`, {\n      method: 'DELETE',\n    });\n    if (!response.ok) {\n      throw new Error(`Error deleting dataset: ${response.statusText}`);\n    }\n    return true;\n  } catch (error) {\n    console.error(`Failed to delete dataset with ID ${id}:`, error);\n    return false;\n  }\n}\n\n// Upload a dataset file\nexport async function uploadDatasetFile(\n  file: File,\n  name: string,\n  description: string,\n  category: DatasetCategory,\n  subcategory: string,\n  source: string,\n  tags: string[] = []\n): Promise<Dataset | null> {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', name);\n    formData.append('description', description);\n    formData.append('category', category);\n    formData.append('subcategory', subcategory);\n    formData.append('source', source);\n    formData.append('format', file.name.split('.').pop() || 'other');\n    formData.append('path', `/data/${category}/${file.name}`);\n    formData.append('tags', JSON.stringify(tags));\n\n    const response = await fetch(`${API_BASE_URL}/datasets`, {\n      method: 'POST',\n      body: formData,\n    });\n    if (!response.ok) {\n      throw new Error(`Error uploading dataset: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Failed to upload dataset:', error);\n    return null;\n  }\n}\n\n// Get all subcategories\nexport async function getSubcategories(): Promise<DatasetSubcategory[]> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets/subcategories`);\n    if (!response.ok) {\n      throw new Error(`Error fetching subcategories: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Failed to fetch subcategories:', error);\n    throw error;\n  }\n}\n\n// Get subcategories by category\nexport async function getSubcategoriesByCategory(category: DatasetCategory): Promise<DatasetSubcategory[]> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets/subcategories?category=${category}`);\n    if (!response.ok) {\n      throw new Error(`Error fetching subcategories by category: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to fetch subcategories for category ${category}:`, error);\n    throw error;\n  }\n}\n\n// Get all agent recommendations\nexport async function getAgentRecommendations(): Promise<AgentRecommendation[]> {\n  try {\n    // The backend endpoint is /recommendations/all\n    const response = await fetch(`${API_BASE_URL}/recommendations/all`);\n    if (!response.ok) {\n      throw new Error(`Error fetching recommendations: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Failed to fetch agent recommendations:', error);\n    throw error;\n  }\n}\n\n// Get agent recommendations by dataset ID\nexport async function getRecommendationsByDataset(datasetId: string): Promise<AgentRecommendation[]> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets/${datasetId}/recommendations`);\n    if (!response.ok) {\n      throw new Error(`Error fetching recommendations: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to fetch recommendations for dataset ${datasetId}:`, error);\n    throw error;\n  }\n}\n\n// Get agent recommendations by agent name\nexport async function getRecommendationsByAgent(agentName: string): Promise<AgentRecommendation[]> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/datasets/recommendations/${agentName}`);\n    if (!response.ok) {\n      throw new Error(`Error fetching recommendations: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to fetch recommendations for agent ${agentName}:`, error);\n    throw error;\n  }\n}\n\n// Get recommendation by ID\nexport async function getRecommendationById(id: string): Promise<AgentRecommendation | null> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/recommendations/${id}`);\n    if (!response.ok) {\n      if (response.status === 404) {\n        return null;\n      }\n      throw new Error(`Error fetching recommendation: ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to fetch recommendation with ID ${id}:`, error);\n    return null;\n  }\n}\n\n// Get dataset data with pagination, sorting, and filtering\nexport async function getDatasetData(\n  datasetId: string,\n  page: number = 1,\n  pageSize: number = 100,\n  sortColumn?: string,\n  sortDirection?: 'asc' | 'desc',\n  filters?: Record<string, any>\n): Promise<{ data: any[], totalRows: number }> {\n  try {\n    let url = `${API_BASE_URL}/datasets/${datasetId}/data?page=${page}&pageSize=${pageSize}`;\n    \n    if (sortColumn && sortDirection) {\n      url += `&sortColumn=${sortColumn}&sortDirection=${sortDirection}`;\n    }\n    \n    if (filters) {\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null && value !== '') {\n          url += `&${key}=${encodeURIComponent(value)}`;\n        }\n      });\n    }\n    \n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Error fetching dataset data: ${response.statusText}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error(`Failed to fetch data for dataset ${datasetId}:`, error);\n    throw error;\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/datasets/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useParams, useRouter } from 'next/navigation';\nimport { \n  ArrowLeft, \n  Download, \n  FileType, \n  Database, \n  Calendar, \n  HardDrive, \n  Tag, \n  Filter, \n  ArrowUpDown, \n  Search, \n  ChevronLeft, \n  ChevronRight, \n  ChevronsLeft, \n  ChevronsRight,\n  RefreshCw,\n  SlidersHorizontal\n} from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { \n  Table, \n  TableBody, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from \"@/components/ui/table\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { getDatasetById, getDatasetData, Dataset } from '@/services/datasets-service';\nimport { format } from 'date-fns';\n\n// Simulated data for the table\ninterface DataRow {\n  id: string;\n  [key: string]: any;\n}\n\nexport default function DatasetExplorerPage() {\n  const { toast } = useToast();\n  const params = useParams();\n  const router = useRouter();\n  const [dataset, setDataset] = useState<Dataset | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Table state\n  const [data, setData] = useState<DataRow[]>([]);\n  const [columns, setColumns] = useState<string[]>([]);\n  const [visibleColumns, setVisibleColumns] = useState<string[]>([]);\n  const [sortColumn, setSortColumn] = useState<string | null>(null);\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(50);\n  const [totalRows, setTotalRows] = useState(0);\n  const [filters, setFilters] = useState<Record<string, any>>({});\n  const [isLoadingData, setIsLoadingData] = useState(false);\n\n  // Load dataset details\n  useEffect(() => {\n    const fetchDataset = async () => {\n      if (!params.id) return;\n      \n      try {\n        const datasetId = Array.isArray(params.id) ? params.id[0] : params.id;\n        const fetchedDataset = await getDatasetById(datasetId);\n        \n        if (fetchedDataset) {\n          setDataset(fetchedDataset);\n          \n          // Set up columns based on dataset metadata\n          if (fetchedDataset.metadata && fetchedDataset.metadata.columns) {\n            setColumns(fetchedDataset.metadata.columns);\n            setVisibleColumns(fetchedDataset.metadata.columns);\n          }\n          \n          // Simulate loading data\n          loadDatasetData(fetchedDataset);\n        } else {\n          setError('Dataset not found');\n        }\n      } catch (err) {\n        console.error('Failed to load dataset:', err);\n        setError('Failed to load dataset. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchDataset();\n  }, [params.id]);\n  \n  // Reload data when pagination, sorting, or filtering changes\n  useEffect(() => {\n    if (dataset) {\n      loadDatasetData(dataset);\n    }\n  }, [currentPage, pageSize, sortColumn, sortDirection, filters]);\n\n  // Load dataset data from the backend\n  const loadDatasetData = async (dataset: Dataset) => {\n    setIsLoadingData(true);\n    \n    try {\n      if (!dataset.id) {\n        throw new Error('Dataset ID is required');\n      }\n      \n      // Check if dataset size is reasonable before attempting to load\n      if (dataset.size <= 0) {\n        throw new Error('Dataset appears to be empty');\n      }\n      \n      // Fetch data from the backend with pagination, sorting, and filtering\n      const result = await getDatasetData(\n        dataset.id,\n        currentPage,\n        pageSize,\n        sortColumn || undefined,\n        sortDirection,\n        filters\n      );\n      \n      // Ensure we have columns defined\n      if (!columns.length && result.data.length > 0) {\n        const sampleColumns = Object.keys(result.data[0]);\n        setColumns(sampleColumns);\n        setVisibleColumns(sampleColumns);\n      }\n      \n      setData(result.data.map((item, index) => ({\n        id: `row-${index}`,\n        ...item\n      })));\n      setTotalRows(result.totalRows);\n    } catch (error) {\n      console.error('Failed to load dataset data:', error);\n      setError(`Failed to load dataset data: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      setData([]);\n      setTotalRows(0);\n    } finally {\n      setIsLoadingData(false);\n    }\n  };\n\n  // Format file size\n  const formatFileSize = (sizeInKB: number): string => {\n    if (sizeInKB < 1024) {\n      return `${sizeInKB} KB`;\n    } else if (sizeInKB < 1024 * 1024) {\n      return `${(sizeInKB / 1024).toFixed(2)} MB`;\n    } else {\n      return `${(sizeInKB / (1024 * 1024)).toFixed(2)} GB`;\n    }\n  };\n\n  // Format date\n  const formatDate = (dateString: string): string => {\n    try {\n      return format(new Date(dateString), 'MMM d, yyyy');\n    } catch (e) {\n      return dateString;\n    }\n  };\n\n  // Get category badge color\n  const getCategoryColor = (category: string): string => {\n    const colors: Record<string, string> = {\n      forex: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',\n      crypto: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300',\n      stocks: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n      futures: 'bg-amber-100 text-amber-800 dark:bg-amber-900 dark:text-amber-300',\n      commodities: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300',\n      indices: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',\n      other: 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-300'\n    };\n    \n    return colors[category] || colors.other;\n  };\n\n  // Get format icon\n  const getFormatIcon = (format: string) => {\n    switch (format) {\n      case 'csv':\n        return <FileType className=\"h-4 w-4\" />;\n      case 'json':\n        return <FileType className=\"h-4 w-4\" />;\n      case 'parquet':\n        return <Database className=\"h-4 w-4\" />;\n      default:\n        return <FileType className=\"h-4 w-4\" />;\n    }\n  };\n\n  // Handle sort\n  const handleSort = (column: string) => {\n    if (sortColumn === column) {\n      // Toggle direction if same column\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      // Set new column and default to ascending\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n    \n    // In a real implementation, this would trigger a data reload\n    // with the new sort parameters\n  };\n\n  // Handle column visibility toggle\n  const handleColumnToggle = (column: string) => {\n    if (visibleColumns.includes(column)) {\n      setVisibleColumns(visibleColumns.filter(col => col !== column));\n    } else {\n      setVisibleColumns([...visibleColumns, column]);\n    }\n  };\n\n  // Handle page change\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    // In a real implementation, this would trigger a data reload\n    // with the new pagination parameters\n  };\n\n  // Handle search\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset to first page on new search\n    // In a real implementation, this would trigger a data reload\n    // with the new search parameters\n  };\n\n  // Handle filter change\n  const handleFilterChange = (column: string, value: any) => {\n    setFilters({\n      ...filters,\n      [column]: value\n    });\n    setCurrentPage(1); // Reset to first page on new filter\n    // In a real implementation, this would trigger a data reload\n    // with the new filter parameters\n  };\n\n  // Calculate total pages\n  const totalPages = Math.ceil(totalRows / pageSize);\n\n  // Format cell value based on column type\n  const formatCellValue = (column: string, value: any): string => {\n    if (value === null || value === undefined) return '-';\n    \n    if (column === 'timestamp' || column.includes('date')) {\n      try {\n        return format(new Date(value), 'yyyy-MM-dd HH:mm:ss');\n      } catch (e) {\n        return String(value);\n      }\n    }\n    \n    if (typeof value === 'number') {\n      if (column === 'volume' || column === 'open_interest') {\n        return value.toLocaleString();\n      }\n      if (column === 'open' || column === 'high' || column === 'low' || column === 'close' || column.includes('price')) {\n        return value.toFixed(2);\n      }\n    }\n    \n    return String(value);\n  };\n\n  // Render loading state\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center gap-2\">\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => router.back()}>\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back\n          </Button>\n          <Skeleton className=\"h-8 w-64\" />\n        </div>\n        <Skeleton className=\"h-[calc(100vh-200px)] w-full\" />\n      </div>\n    );\n  }\n\n  // Render error state\n  if (error || !dataset) {\n    return (\n      <div className=\"space-y-6\">\n        <Button variant=\"ghost\" size=\"sm\" onClick={() => router.back()}>\n          <ArrowLeft className=\"h-4 w-4 mr-1\" />\n          Back to Datasets\n        </Button>\n        <Card>\n          <CardContent className=\"flex flex-col items-center justify-center py-10 text-center\">\n            <Database className=\"h-10 w-10 text-muted-foreground mb-4\" />\n            <p className=\"text-muted-foreground mb-2\">{error || 'Dataset not found'}</p>\n            <Button onClick={() => router.back()}>Return to Datasets</Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col gap-4\">\n        <div className=\"flex items-center gap-2\">\n          <Button variant=\"ghost\" size=\"sm\" onClick={() => router.back()}>\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Back to Datasets\n          </Button>\n        </div>\n        \n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold tracking-tight flex items-center gap-2\">\n              {dataset.name}\n              <Badge className={`${getCategoryColor(dataset.category)} capitalize ml-2`}>\n                {dataset.category}\n              </Badge>\n            </h1>\n            <p className=\"text-muted-foreground\">\n              {dataset.description}\n            </p>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"flex items-center gap-1\"\n              onClick={() => loadDatasetData(dataset)}\n            >\n              <RefreshCw className=\"h-4 w-4\" />\n              Refresh\n            </Button>\n            <Button\n              size=\"sm\"\n              className=\"flex items-center gap-1\"\n              onClick={() => {\n                // Create a download link for the dataset\n                const downloadUrl = `${window.location.origin}/api/datasets/${dataset.id}/download`;\n                const a = document.createElement('a');\n                a.href = downloadUrl;\n                a.download = `${dataset.name}.${dataset.format}`;\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                \n                toast({\n                  title: \"Download started\",\n                  description: `Downloading ${dataset.name}.${dataset.format}`,\n                });\n              }}\n            >\n              <Download className=\"h-4 w-4\" />\n              Download\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Dataset Info */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center gap-2\">\n              <FileType className=\"h-5 w-5 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm font-medium\">Format</p>\n                <p className=\"text-sm text-muted-foreground\">{dataset.format.toUpperCase()}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center gap-2\">\n              <HardDrive className=\"h-5 w-5 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm font-medium\">Size</p>\n                <p className=\"text-sm text-muted-foreground\">{formatFileSize(dataset.size)}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center gap-2\">\n              <Database className=\"h-5 w-5 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm font-medium\">Source</p>\n                <p className=\"text-sm text-muted-foreground\">{dataset.source}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center gap-2\">\n              <Calendar className=\"h-5 w-5 text-muted-foreground\" />\n              <div>\n                <p className=\"text-sm font-medium\">Last Updated</p>\n                <p className=\"text-sm text-muted-foreground\">{formatDate(dataset.lastUpdated)}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Data Explorer */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle>Data Explorer</CardTitle>\n          <CardDescription>\n            Explore and analyze the dataset with advanced filtering and sorting capabilities.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {/* Table Controls */}\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">Rows per page:</span>\n              <select\n                className=\"h-8 rounded-md border border-input bg-background px-3 py-1 text-sm ring-offset-background\"\n                value={pageSize}\n                onChange={(e) => {\n                  setPageSize(Number(e.target.value));\n                  setCurrentPage(1); // Reset to first page when changing page size\n                }}\n              >\n                <option value=\"10\">10</option>\n                <option value=\"25\">25</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n                <option value=\"250\">250</option>\n              </select>\n            </div>\n            <div className=\"relative w-full sm:w-96\">\n              <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                type=\"search\"\n                placeholder=\"Search data...\"\n                className=\"pl-8 w-full\"\n                value={searchQuery}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Sheet>\n                <SheetTrigger asChild>\n                  <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-1\">\n                    <SlidersHorizontal className=\"h-4 w-4\" />\n                    Columns\n                  </Button>\n                </SheetTrigger>\n                <SheetContent side=\"right\">\n                  <SheetHeader>\n                    <SheetTitle>Visible Columns</SheetTitle>\n                    <SheetDescription>\n                      Select which columns to display in the table.\n                    </SheetDescription>\n                  </SheetHeader>\n                  <Separator className=\"my-4\" />\n                  <ScrollArea className=\"h-[calc(100vh-200px)]\">\n                    <div className=\"space-y-4\">\n                      {columns.map((column) => (\n                        <div key={column} className=\"flex items-center space-x-2\">\n                          <Checkbox \n                            id={`column-${column}`} \n                            checked={visibleColumns.includes(column)}\n                            onCheckedChange={() => handleColumnToggle(column)}\n                          />\n                          <Label htmlFor={`column-${column}`}>{column}</Label>\n                        </div>\n                      ))}\n                    </div>\n                  </ScrollArea>\n                </SheetContent>\n              </Sheet>\n              <Sheet>\n                <SheetTrigger asChild>\n                  <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-1\">\n                    <Filter className=\"h-4 w-4\" />\n                    Filters\n                  </Button>\n                </SheetTrigger>\n                <SheetContent side=\"right\">\n                  <SheetHeader>\n                    <SheetTitle>Data Filters</SheetTitle>\n                    <SheetDescription>\n                      Apply filters to narrow down the dataset.\n                    </SheetDescription>\n                  </SheetHeader>\n                  <Separator className=\"my-4\" />\n                  <div className=\"space-y-4\">\n                    {/* Filter controls would go here */}\n                    <p className=\"text-sm text-muted-foreground\">\n                      Filter controls would be implemented based on column types.\n                    </p>\n                  </div>\n                </SheetContent>\n              </Sheet>\n            </div>\n          </div>\n\n          {/* Data Table */}\n          <div className=\"border rounded-md\">\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    {visibleColumns.length > 0 ? (\n                      visibleColumns.map((column) => (\n                        <TableHead key={column}>\n                          <Button\n                            variant=\"ghost\"\n                            className=\"p-0 font-medium hover:bg-transparent\"\n                            onClick={() => handleSort(column)}\n                          >\n                            {column}\n                            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n                          </Button>\n                        </TableHead>\n                      ))\n                    ) : (\n                      <TableHead>No columns available</TableHead>\n                    )}\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {isLoadingData ? (\n                    Array.from({ length: 10 }).map((_, index) => (\n                      <TableRow key={`loading-${index}`}>\n                        {visibleColumns.length > 0 ? (\n                          visibleColumns.map((column) => (\n                            <TableCell key={`loading-${index}-${column}`}>\n                              <Skeleton className=\"h-4 w-full\" />\n                            </TableCell>\n                          ))\n                        ) : (\n                          <TableCell>\n                            <Skeleton className=\"h-4 w-full\" />\n                          </TableCell>\n                        )}\n                      </TableRow>\n                    ))\n                  ) : data.length === 0 ? (\n                    <TableRow>\n                      <TableCell colSpan={Math.max(visibleColumns.length, 1)} className=\"h-24 text-center text-muted-foreground\">\n                        {dataset.size <= 0 ?\n                          \"This dataset appears to be empty. Try uploading a new file.\" :\n                          \"No data found for this dataset with the current filters.\"}\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    data.map((row) => (\n                      <TableRow key={row.id}>\n                        {visibleColumns.map((column) => (\n                          <TableCell key={`${row.id}-${column}`}>\n                            {formatCellValue(column, row[column])}\n                          </TableCell>\n                        ))}\n                      </TableRow>\n                    ))\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n\n            {/* Pagination */}\n            <div className=\"flex items-center justify-between p-4 border-t\">\n              <div className=\"text-sm text-muted-foreground\">\n                Showing {(currentPage - 1) * pageSize + 1} to {Math.min(currentPage * pageSize, totalRows)} of {totalRows} entries\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePageChange(1)}\n                  disabled={currentPage === 1}\n                >\n                  <ChevronsLeft className=\"h-4 w-4\" />\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1}\n                >\n                  <ChevronLeft className=\"h-4 w-4\" />\n                </Button>\n                <span className=\"text-sm\">\n                  Page {currentPage} of {totalPages}\n                </span>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={currentPage === totalPages}\n                >\n                  <ChevronRight className=\"h-4 w-4\" />\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePageChange(totalPages)}\n                  disabled={currentPage === totalPages}\n                >\n                  <ChevronsRight className=\"h-4 w-4\" />\n                </Button>\n                <DropdownMenu>\n                  <DropdownMenuTrigger asChild>\n                    <Button variant=\"outline\" size=\"sm\">\n                      {pageSize} rows\n                    </Button>\n                  </DropdownMenuTrigger>\n                  <DropdownMenuContent>\n                    {[10, 25, 50, 100, 250, 500].map((size) => (\n                      <DropdownMenuItem \n                        key={size}\n                        onClick={() => {\n                          setPageSize(size);\n                          setCurrentPage(1);\n                        }}\n                      >\n                        {size} rows\n                      </DropdownMenuItem>\n                    ))}\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}