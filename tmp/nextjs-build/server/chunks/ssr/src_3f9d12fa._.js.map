{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/services/agents-service.new.ts"],"sourcesContent":["// src/services/agents-service.new.ts\n\n/**\n * @fileOverview Service functions for fetching agent data.\n * This service connects to the backend API to fetch and manage agents.\n * The backend is built with FastAPI and uses SQLModel to interact with a SQLite database.\n * This version includes Pydantic-AI specific configuration options.\n */\n\nimport { z } from 'zod';\nimport type { BrokerConfig } from './settings-service'; // Import for broker types\n\n// --- Available Tools (Mock) ---\n// In a Pydantic-AI setup, these might be classes with `run` methods.\n// For UI, we just need their names and descriptions.\nexport const availableTools = [\n    { name: 'MarketDataFetcher', description: 'Fetches historical and real-time market data for specified assets.' },\n    { name: 'TechnicalIndicatorCalculator', description: 'Calculates various technical indicators (e.g., RSI, MACD, SMA).' },\n    { name: 'WebSearcher', description: 'Performs web searches for news, analysis, or other relevant information (uses SerpAPI if configured).' },\n    { name: 'PortfolioManager', description: 'Accesses current portfolio state, positions, and P&L.' },\n    { name: 'OrderExecutor', description: 'Places, modifies, or cancels trades via a configured broker.' },\n    { name: 'Backtester', description: 'Runs backtests on strategy code with specified parameters.'},\n] as const;\nexport type ToolName = typeof availableTools[number]['name'];\n\n// --- Pydantic-AI Dependencies Schema ---\nexport const DependenciesSchema = z.object({\n    client: z.string().optional().describe(\"HTTP client configuration\"),\n    weather_api_key: z.string().optional().describe(\"API key for weather services\"),\n    news_api_key: z.string().optional().describe(\"API key for news services\"),\n    market_data_api_key: z.string().optional().describe(\"API key for market data services\"),\n    geo_api_key: z.string().optional().describe(\"API key for geolocation services\"),\n    serp_api_key: z.string().optional().describe(\"API key for search engine results\"),\n    broker_credentials: z.record(z.string()).optional().describe(\"Credentials for broker connections\"),\n}).describe(\"Resources that tools might need, such as API clients, database connections, etc.\");\n\n// --- Base Agent Configuration Schema ---\nexport const BaseAgentConfigSchema = z.object({\n    // Core Pydantic-AI parameters\n    system_prompt: z.string().optional().describe(\"System prompt that guides the agent's behavior\"),\n    retries: z.number().default(2).describe(\"Number of retries for failed operations\"),\n    instrument: z.boolean().default(true).describe(\"Whether to instrument the agent for monitoring\"),\n    \n    // LLM configuration\n    llm_provider: z.enum(['openai', 'google', 'anthropic', 'groq', 'local']).default('groq').describe(\"LLM provider to use\"),\n    llm_model: z.string().optional().describe(\"Specific model name (e.g., 'gpt-4', 'claude-3-opus')\"),\n    \n    // Tool configuration\n    enabled_tools: z.array(z.custom<ToolName>((val) => availableTools.some(tool => tool.name === val)))\n        .optional()\n        .default([])\n        .describe(\"Tools this agent can use\"),\n    \n    // Logging and monitoring\n    log_level: z.enum(['debug', 'info', 'warn', 'error']).default('info').describe(\"Logging verbosity for the agent\"),\n    \n    // Dependencies configuration\n    dependencies: DependenciesSchema.optional().describe(\"Dependencies for the agent's tools\"),\n});\nexport type BaseAgentConfig = z.infer<typeof BaseAgentConfigSchema>;\n\n// --- Research Agent Config ---\nexport const ResearchAgentConfigSchema = BaseAgentConfigSchema.extend({\n    research_depth: z.enum(['shallow', 'moderate', 'deep']).default('moderate').describe(\"Depth of research to perform\"),\n    max_sources: z.number().default(5).describe(\"Maximum number of sources to consult\"),\n    include_sentiment_analysis: z.boolean().default(true).describe(\"Whether to include sentiment analysis\"),\n    research_prompt_template: z.string().optional().describe(\"Custom prompt template for research\"),\n});\nexport type ResearchAgentConfig = z.infer<typeof ResearchAgentConfigSchema>;\n\n// --- Strategy Coding Agent Config ---\nexport const StrategyCodingAgentConfigSchema = BaseAgentConfigSchema.extend({\n    strategy_framework: z.string().default('lumibot').describe(\"Framework to use for strategy code generation\"),\n    default_timeframe: z.string().default('1D').describe(\"Default trading timeframe\"),\n    default_asset_class: z.string().default('stock').describe(\"Default asset class\"),\n    coding_prompt_template: z.string().optional().describe(\"Custom prompt template for code generation\"),\n    include_comments: z.boolean().default(true).describe(\"Whether to include detailed comments in generated code\"),\n    include_tests: z.boolean().default(false).describe(\"Whether to generate test cases\"),\n});\nexport type StrategyCodingAgentConfig = z.infer<typeof StrategyCodingAgentConfigSchema>;\n\n// --- Execution Agent Config ---\nexport const ExecutionAgentConfigSchema = BaseAgentConfigSchema.extend({\n    broker_id: z.string().describe(\"ID of the broker configuration to use\"),\n    max_concurrent_trades: z.number().default(5).describe(\"Maximum number of concurrent trades\"),\n    risk_per_trade: z.number().default(1).describe(\"Maximum risk percentage per trade\"),\n    require_confirmation: z.boolean().default(true).describe(\"Whether to require confirmation before executing trades\"),\n    execution_prompt_template: z.string().optional().describe(\"Custom prompt template for execution decisions\"),\n    trading_hours: z.object({\n        start: z.string().optional(),\n        end: z.string().optional(),\n        timezone: z.string().default('UTC'),\n    }).optional().describe(\"Trading hours configuration\"),\n});\nexport type ExecutionAgentConfig = z.infer<typeof ExecutionAgentConfigSchema>;\n\n// --- Portfolio Agent Config ---\nexport const PortfolioAgentConfigSchema = BaseAgentConfigSchema.extend({\n    rebalance_frequency: z.enum(['daily', 'weekly', 'monthly', 'quarterly']).default('monthly').describe(\"How often to rebalance the portfolio\"),\n    max_allocation_per_asset: z.number().default(20).describe(\"Maximum allocation percentage for any single asset\"),\n    risk_profile: z.enum(['conservative', 'moderate', 'aggressive']).default('moderate').describe(\"Risk profile for portfolio management\"),\n    portfolio_prompt_template: z.string().optional().describe(\"Custom prompt template for portfolio decisions\"),\n});\nexport type PortfolioAgentConfig = z.infer<typeof PortfolioAgentConfigSchema>;\n\n// --- Risk Agent Config ---\nexport const RiskAgentConfigSchema = BaseAgentConfigSchema.extend({\n    max_drawdown: z.number().default(10).describe(\"Maximum drawdown percentage allowed\"),\n    volatility_threshold: z.number().default(15).describe(\"Volatility threshold for risk warnings\"),\n    correlation_threshold: z.number().default(0.7).describe(\"Correlation threshold for diversification warnings\"),\n    risk_prompt_template: z.string().optional().describe(\"Custom prompt template for risk assessment\"),\n});\nexport type RiskAgentConfig = z.infer<typeof RiskAgentConfigSchema>;\n\n// --- Data Agent Config ---\nexport const DataAgentConfigSchema = BaseAgentConfigSchema.extend({\n    watched_assets: z.array(z.object({\n        symbol: z.string(),\n        broker_id: z.string(),\n    })).default([]).describe(\"Assets to watch for data collection\"),\n    data_sources: z.array(z.string()).default(['market', 'news', 'social']).describe(\"Data sources to monitor\"),\n    update_frequency: z.enum(['realtime', 'minute', 'hour', 'day']).default('hour').describe(\"How often to update data\"),\n    data_prompt_template: z.string().optional().describe(\"Custom prompt template for data analysis\"),\n});\nexport type DataAgentConfig = z.infer<typeof DataAgentConfigSchema>;\n\n// --- Analysis Agent Config ---\nexport const AnalysisAgentConfigSchema = BaseAgentConfigSchema.extend({\n    analysis_types: z.array(z.enum(['technical', 'fundamental', 'sentiment', 'macro'])).default(['technical']).describe(\"Types of analysis to perform\"),\n    indicator_preferences: z.record(z.any()).default({}).describe(\"Preferences for technical indicators\"),\n    analysis_prompt_template: z.string().optional().describe(\"Custom prompt template for analysis\"),\n});\nexport type AnalysisAgentConfig = z.infer<typeof AnalysisAgentConfigSchema>;\n\n// --- Agent Type Union ---\nexport type AgentConfig = \n    | BaseAgentConfig \n    | ResearchAgentConfig \n    | StrategyCodingAgentConfig \n    | ExecutionAgentConfig \n    | PortfolioAgentConfig \n    | RiskAgentConfig \n    | DataAgentConfig \n    | AnalysisAgentConfig;\n\n// --- Agent Interface ---\nexport interface Agent {\n    id: string;\n    name: string;\n    type: 'Research Agent' | 'Strategy Coding Agent' | 'Execution Agent' | 'Portfolio Agent' | 'Risk Agent' | 'Data Agent' | 'Analysis Agent';\n    description: string;\n    status: 'Active' | 'Idle' | 'Error';\n    tasksCompleted: number;\n    errors: number;\n    isDefault: boolean;\n    associatedStrategyIds: string[];\n    config: AgentConfig;\n}\n\n// --- Mock Data ---\nconst mockAgents: Agent[] = [\n    {\n        id: 'agent-research',\n        name: 'Research Agent',\n        type: 'Research Agent',\n        description: 'Analyzes market data and news to provide insights.',\n        status: 'Idle',\n        tasksCompleted: 0,\n        errors: 0,\n        isDefault: true,\n        associatedStrategyIds: [],\n        config: {\n            system_prompt: \"You are a financial research agent. Analyze market data and news to provide insights.\",\n            llm_provider: 'groq',\n            llm_model: 'llama3-70b-8192',\n            enabled_tools: ['WebSearcher', 'MarketDataFetcher'],\n            log_level: 'info',\n            retries: 2,\n            instrument: true,\n            research_depth: 'moderate',\n            max_sources: 5,\n            include_sentiment_analysis: true,\n        }\n    },\n    {\n        id: 'agent-strategy-coding',\n        name: 'Strategy Coding Agent',\n        type: 'Strategy Coding Agent',\n        description: 'Generates trading strategy code based on specifications.',\n        status: 'Idle',\n        tasksCompleted: 0,\n        errors: 0,\n        isDefault: true,\n        associatedStrategyIds: [],\n        config: {\n            system_prompt: \"You are a strategy coding agent. Generate trading strategy code based on specifications.\",\n            llm_provider: 'openai',\n            llm_model: 'gpt-4-turbo',\n            enabled_tools: ['TechnicalIndicatorCalculator', 'Backtester'],\n            log_level: 'info',\n            retries: 2,\n            instrument: true,\n            strategy_framework: 'lumibot',\n            default_timeframe: '1D',\n            default_asset_class: 'stock',\n            include_comments: true,\n            include_tests: false,\n        }\n    },\n    {\n        id: 'agent-execution',\n        name: 'Execution Agent',\n        type: 'Execution Agent',\n        description: 'Executes trades based on strategy signals.',\n        status: 'Idle',\n        tasksCompleted: 0,\n        errors: 0,\n        isDefault: true,\n        associatedStrategyIds: [],\n        config: {\n            system_prompt: \"You are an execution agent. Execute trades based on strategy signals.\",\n            llm_provider: 'anthropic',\n            llm_model: 'claude-3-sonnet-20240229',\n            enabled_tools: ['OrderExecutor', 'PortfolioManager'],\n            log_level: 'info',\n            retries: 2,\n            instrument: true,\n            broker_id: 'broker-alpaca-paper',\n            max_concurrent_trades: 5,\n            risk_per_trade: 1,\n            require_confirmation: true,\n        }\n    },\n    {\n        id: 'agent-portfolio',\n        name: 'Portfolio Agent',\n        type: 'Portfolio Agent',\n        description: 'Manages portfolio allocation and rebalancing.',\n        status: 'Idle',\n        tasksCompleted: 0,\n        errors: 0,\n        isDefault: true,\n        associatedStrategyIds: [],\n        config: {\n            system_prompt: \"You are a portfolio management agent. Manage portfolio allocation and rebalancing.\",\n            llm_provider: 'groq',\n            llm_model: 'llama3-70b-8192',\n            enabled_tools: ['PortfolioManager', 'MarketDataFetcher'],\n            log_level: 'info',\n            retries: 2,\n            instrument: true,\n            rebalance_frequency: 'monthly',\n            max_allocation_per_asset: 20,\n            risk_profile: 'moderate',\n        }\n    },\n    {\n        id: 'agent-risk',\n        name: 'Risk Agent',\n        type: 'Risk Agent',\n        description: 'Monitors and manages trading risk.',\n        status: 'Idle',\n        tasksCompleted: 0,\n        errors: 0,\n        isDefault: true,\n        associatedStrategyIds: [],\n        config: {\n            system_prompt: \"You are a risk management agent. Monitor and manage trading risk.\",\n            llm_provider: 'openai',\n            llm_model: 'gpt-4-turbo',\n            enabled_tools: ['PortfolioManager', 'MarketDataFetcher'],\n            log_level: 'info',\n            retries: 2,\n            instrument: true,\n            max_drawdown: 10,\n            volatility_threshold: 15,\n            correlation_threshold: 0.7,\n        }\n    },\n];\n\n// --- Service Functions ---\n\n/**\n * Fetches all agents from the backend.\n * @returns A promise resolving to an array of Agent objects.\n */\nexport async function getAgents(): Promise<Agent[]> {\n    console.log(\"Fetching agents from backend...\");\n    \n    // In a real implementation, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    return [...mockAgents]; // Return a copy to prevent mutation\n}\n\n/**\n * Fetches a specific agent by ID.\n * @param agentId The ID of the agent to fetch.\n * @returns A promise resolving to the Agent object or null if not found.\n */\nexport async function getAgent(agentId: string): Promise<Agent | null> {\n    console.log(`Fetching agent with ID: ${agentId}`);\n    \n    // In a real implementation, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    const agent = mockAgents.find(a => a.id === agentId);\n    return agent ? { ...agent } : null; // Return a copy to prevent mutation\n}\n\n/**\n * Fetches the configuration for a specific agent.\n * @param agentId The ID of the agent to fetch configuration for.\n * @returns A promise resolving to the agent's configuration or null if not found.\n */\nexport async function getAgentConfig(agentId: string): Promise<AgentConfig | null> {\n    console.log(`Fetching configuration for agent with ID: ${agentId}`);\n    \n    // In a real implementation, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    const agent = mockAgents.find(a => a.id === agentId);\n    return agent ? { ...agent.config } : null; // Return a copy to prevent mutation\n}\n\n/**\n * Updates the configuration for a specific agent.\n * @param agentId The ID of the agent to update configuration for.\n * @param config The new configuration to apply.\n * @returns A promise resolving to the updated configuration or null if the agent was not found.\n */\nexport async function updateAgentConfig(agentId: string, config: AgentConfig): Promise<AgentConfig | null> {\n    console.log(`Updating configuration for agent with ID: ${agentId}`);\n    console.log(\"New config:\", config);\n    \n    // In a real implementation, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const agentIndex = mockAgents.findIndex(a => a.id === agentId);\n    if (agentIndex === -1) return null;\n    \n    // Update the agent's configuration\n    mockAgents[agentIndex].config = { ...config };\n    \n    return { ...mockAgents[agentIndex].config }; // Return a copy to prevent mutation\n}\n\n/**\n * Activates an agent, changing its status to 'Active'.\n * @param agentId The ID of the agent to activate.\n * @returns A promise resolving to the updated Agent object or null if not found.\n */\nexport async function activateAgent(agentId: string): Promise<Agent | null> {\n    console.log(`Activating agent with ID: ${agentId}`);\n    \n    // In a real implementation, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const agentIndex = mockAgents.findIndex(a => a.id === agentId);\n    if (agentIndex === -1) return null;\n    \n    // Update the agent's status\n    mockAgents[agentIndex].status = 'Active';\n    \n    return { ...mockAgents[agentIndex] }; // Return a copy to prevent mutation\n}\n\n/**\n * Deactivates an agent, changing its status to 'Idle'.\n * @param agentId The ID of the agent to deactivate.\n * @returns A promise resolving to the updated Agent object or null if not found.\n */\nexport async function deactivateAgent(agentId: string): Promise<Agent | null> {\n    console.log(`Deactivating agent with ID: ${agentId}`);\n    \n    // In a real implementation, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const agentIndex = mockAgents.findIndex(a => a.id === agentId);\n    if (agentIndex === -1) return null;\n    \n    // Update the agent's status\n    mockAgents[agentIndex].status = 'Idle';\n    \n    return { ...mockAgents[agentIndex] }; // Return a copy to prevent mutation\n}\n\n/**\n * Creates a new custom agent.\n * @param agent The agent to create.\n * @returns A promise resolving to the created Agent object.\n */\nexport async function createAgent(agent: Omit<Agent, 'id'>): Promise<Agent> {\n    console.log(\"Creating new agent:\", agent);\n    \n    // In a real implementation, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 700));\n    \n    // Generate a new ID for the agent\n    const newAgent: Agent = {\n        ...agent,\n        id: `agent-custom-${Date.now()}`,\n    };\n    \n    // Add the new agent to the mock data\n    mockAgents.push(newAgent);\n    \n    return { ...newAgent }; // Return a copy to prevent mutation\n}\n\n/**\n * Deletes an agent.\n * @param agentId The ID of the agent to delete.\n * @returns A promise resolving to a boolean indicating success.\n */\nexport async function deleteAgent(agentId: string): Promise<boolean> {\n    console.log(`Deleting agent with ID: ${agentId}`);\n    \n    // In a real implementation, this would be an API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const agentIndex = mockAgents.findIndex(a => a.id === agentId);\n    if (agentIndex === -1) return false;\n    \n    // Remove the agent from the mock data\n    mockAgents.splice(agentIndex, 1);\n    \n    return true;\n}\n\n/**\n * Gets the schema for a specific agent type.\n * @param agentType The type of agent to get the schema for.\n * @returns The Zod schema for the specified agent type.\n */\nexport function getSchemaForAgentType(agentType: Agent['type']): z.ZodType<any> {\n    switch (agentType) {\n        case 'Research Agent':\n            return ResearchAgentConfigSchema;\n        case 'Strategy Coding Agent':\n            return StrategyCodingAgentConfigSchema;\n        case 'Execution Agent':\n            return ExecutionAgentConfigSchema;\n        case 'Portfolio Agent':\n            return PortfolioAgentConfigSchema;\n        case 'Risk Agent':\n            return RiskAgentConfigSchema;\n        case 'Data Agent':\n            return DataAgentConfigSchema;\n        case 'Analysis Agent':\n            return AnalysisAgentConfigSchema;\n        default:\n            return BaseAgentConfigSchema;\n    }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 812, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 844, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1253, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1298, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1366, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/agents/_components/json-input.tsx"],"sourcesContent":["// src/app/agents/_components/json-input.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Textarea } from '@/components/ui/textarea';\nimport { cn } from '@/lib/utils';\n\ninterface JsonInputProps {\n    value?: Record<string, any>; // Accepts JSON object\n    onChange: (value: Record<string, any> | undefined) => void; // Sends back object or undefined\n    placeholder?: string;\n    disabled?: boolean;\n    className?: string;\n}\n\nexport function JsonInput({ value, onChange, placeholder, disabled, className }: JsonInputProps) {\n    const [textValue, setTextValue] = useState(() => value ? JSON.stringify(value, null, 2) : '');\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        // Update text area if the external value changes (e.g., on form reset)\n        // Avoid unnecessary updates if the parsed value matches the current text\n        try {\n            const currentParsed = textValue ? JSON.parse(textValue) : undefined;\n            if (JSON.stringify(currentParsed) !== JSON.stringify(value)) {\n                 setTextValue(value ? JSON.stringify(value, null, 2) : '');\n                 setError(null); // Clear error if external value resets it\n            }\n        } catch {\n            // If current text is invalid, still update with the new external value\n            setTextValue(value ? JSON.stringify(value, null, 2) : '');\n            setError(null);\n        }\n    }, [value, textValue]); // Depends on external value and internal text\n\n    const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        const newText = event.target.value;\n        setTextValue(newText);\n        try {\n            if (newText.trim() === '') {\n                onChange(undefined); // Clear value if empty\n                setError(null);\n            } else {\n                const parsed = JSON.parse(newText);\n                 // Ensure it's an object (or handle arrays if needed)\n                 if (typeof parsed === 'object' && parsed !== null && !Array.isArray(parsed)) {\n                     onChange(parsed);\n                     setError(null);\n                 } else {\n                     setError(\"Input must be a valid JSON object.\");\n                     onChange(undefined); // Invalid format, send undefined\n                 }\n            }\n        } catch (e) {\n            setError(\"Invalid JSON format.\");\n            onChange(undefined); // Parsing failed, send undefined\n        }\n    };\n\n    return (\n        <div className=\"w-full\">\n            <Textarea\n                value={textValue}\n                onChange={handleChange}\n                placeholder={placeholder || 'Enter JSON object...'}\n                disabled={disabled}\n                className={cn(\"font-mono text-xs min-h-[100px]\", className, error && \"border-destructive focus-visible:ring-destructive\")}\n                aria-invalid={!!error}\n            />\n            {error && <p className=\"text-xs text-destructive mt-1\">{error}</p>}\n        </div>\n    );\n}\n\n    "],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAG5C;AACA;AACA;AAJA;;;;;AAcO,SAAS,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAkB;IAC3F,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAM,QAAQ,KAAK,SAAS,CAAC,OAAO,MAAM,KAAK;IAC1F,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,uEAAuE;QACvE,yEAAyE;QACzE,IAAI;YACA,MAAM,gBAAgB,YAAY,KAAK,KAAK,CAAC,aAAa;YAC1D,IAAI,KAAK,SAAS,CAAC,mBAAmB,KAAK,SAAS,CAAC,QAAQ;gBACxD,aAAa,QAAQ,KAAK,SAAS,CAAC,OAAO,MAAM,KAAK;gBACtD,SAAS,OAAO,0CAA0C;YAC/D;QACJ,EAAE,OAAM;YACJ,uEAAuE;YACvE,aAAa,QAAQ,KAAK,SAAS,CAAC,OAAO,MAAM,KAAK;YACtD,SAAS;QACb;IACJ,GAAG;QAAC;QAAO;KAAU,GAAG,8CAA8C;IAEtE,MAAM,eAAe,CAAC;QAClB,MAAM,UAAU,MAAM,MAAM,CAAC,KAAK;QAClC,aAAa;QACb,IAAI;YACA,IAAI,QAAQ,IAAI,OAAO,IAAI;gBACvB,SAAS,YAAY,uBAAuB;gBAC5C,SAAS;YACb,OAAO;gBACH,MAAM,SAAS,KAAK,KAAK,CAAC;gBACzB,qDAAqD;gBACrD,IAAI,OAAO,WAAW,YAAY,WAAW,QAAQ,CAAC,MAAM,OAAO,CAAC,SAAS;oBACzE,SAAS;oBACT,SAAS;gBACb,OAAO;oBACH,SAAS;oBACT,SAAS,YAAY,iCAAiC;gBAC1D;YACL;QACJ,EAAE,OAAO,GAAG;YACR,SAAS;YACT,SAAS,YAAY,iCAAiC;QAC1D;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,oIAAA,CAAA,WAAQ;gBACL,OAAO;gBACP,UAAU;gBACV,aAAa,eAAe;gBAC5B,UAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mCAAmC,WAAW,SAAS;gBACrE,gBAAc,CAAC,CAAC;;;;;;YAEnB,uBAAS,8OAAC;gBAAE,WAAU;0BAAiC;;;;;;;;;;;;AAGpE","debugId":null}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/services/settings-service.ts"],"sourcesContent":["// src/services/settings-service.ts\n\n/**\n * @fileOverview Service functions for managing application settings.\n * Replace mock implementations with actual backend interactions.\n */\n\nimport { z } from 'zod'; // For potential schema validation if needed\n\n// Define types used in the settings forms\n// Should align with the Zod schemas in the components\n\n// LLM Provider type (align with credentials form schema)\nexport interface LLMProviderConfig {\n  id?: string;\n  providerType: \"google\" | \"openai\" | \"anthropic\" | \"groq\" | \"local\";\n  apiKey?: string;\n  apiUrl?: string; // For local provider\n  modelName?: string; // For local provider, specific model\n}\n\n// Broker Config type (align with credentials form schema - using a generic version for mock)\nexport interface BrokerConfig {\n    brokerType: \"alpaca\" | \"interactive_brokers\" | \"coinbase\" | \"kraken\" | \"binance\" | \"mock\";\n    id?: string; // Add an ID for broker configs\n    apiKey?: string;\n    apiSecret?: string;\n    accountNumber?: string;\n    host?: string;\n    port?: string | number;\n    paperTrading?: boolean;\n    clientId?: number;\n    // [key: string]: any; // Allow other properties like apiKey, apiSecret, paperTrading etc.\n}\n\n// Trading Settings type (align with trading settings form schema)\nexport interface TradingSettings {\n    defaultRiskPerTrade?: number;\n    defaultRiskManagement?: \"user_defined\" | \"ai_managed\";\n    maxPortfolioDrawdown?: number;\n    maxPortfolioDrawdownManagement?: \"user_defined\" | \"ai_managed\";\n    defaultLeverage?: number;\n    leverageManagement?: \"user_defined\" | \"ai_managed\";\n    defaultTrailingStopPercent?: number;\n    trailingStopManagement?: \"user_defined\" | \"ai_managed\";\n    allowedTradeTypes?: (\"buy\" | \"sell\")[];\n    allowedTradingMethods?: (\"spot\" | \"futures\" | \"options\")[];\n    allowedAssetTypes?: (\"stock\" | \"crypto\" | \"forex\" | \"etf\")[];\n    allowedCategories?: string;\n    preferredMarkets?: string;\n}\n\n// Saved Configuration type (for AI suggestions and history)\nexport interface SavedConfig {\n    id: string;\n    name: string;\n    description?: string;\n    createdAt: string; // ISO date string\n    configData: Record<string, any>; // The actual configuration parameters (YAML/JSON parsed)\n    source: 'AI-Generated' | 'User-Saved';\n    status: 'Active' | 'Archived';\n    strategyName?: string; // Optional: Name of strategy used with this config\n    performanceSummary?: string; // Optional: Brief summary of performance\n}\n\n\n// --- Mock Data (Replace with actual backend storage/retrieval) ---\n\nlet mockCredentials = {\n    llmProviders: [\n        { id: 'llm-google-default', providerType: 'google', apiKey: 'GOOGLE_API_KEY_PLACEHOLDER', modelName: 'gemini-2.0-flash' },\n        { id: 'llm-openai-default', providerType: 'openai', apiKey: 'OPENAI_API_KEY_PLACEHOLDER', modelName: 'gpt-4-turbo' },\n        { id: 'llm-local-ollama', providerType: 'local', apiUrl: 'http://localhost:11434/v1', modelName: 'llama3:latest' },\n    ] as LLMProviderConfig[],\n    brokerConfigs: [ // Now an array\n        {\n            id: 'broker-alpaca-paper',\n            brokerType: 'alpaca',\n            apiKey: 'ALPACA_PAPER_KEY',\n            apiSecret: 'ALPACA_PAPER_SECRET',\n            paperTrading: true\n        },\n        {\n            id: 'broker-ibkr-live',\n            brokerType: 'interactive_brokers',\n            accountNumber: 'U1234567',\n            host: '127.0.0.1',\n            port: 7496, // Live TWS port\n        }\n    ] as BrokerConfig[],\n    serpApiKey: 'SERPAPI_KEY_PLACEHOLDER' as string | undefined,\n};\n\nlet mockTradingSettings: TradingSettings = {\n    defaultRiskPerTrade: 1,\n    defaultRiskManagement: \"user_defined\",\n    maxPortfolioDrawdown: 20,\n    maxPortfolioDrawdownManagement: \"user_defined\",\n    preferredMarkets: \"NYSE, NASDAQ\",\n    defaultLeverage: 1,\n    leverageManagement: \"user_defined\",\n    allowedTradeTypes: [\"buy\", \"sell\"],\n    allowedTradingMethods: [\"spot\"],\n    allowedAssetTypes: [\"stock\", \"etf\"],\n    allowedCategories: \"Tech, Healthcare\",\n};\n\nlet mockSavedConfigs: SavedConfig[] = [\n     { id: 'cfg-ai-1', name: 'AI Aggressive Growth (July)', createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(), source: 'AI-Generated', status: 'Active', configData: { defaultRiskPerTrade: 2.5, defaultLeverage: 10, defaultTrailingStopPercent: 1.5 }, strategyName: 'Momentum Burst', performanceSummary: '+5.2% last run' },\n     { id: 'cfg-ai-2', name: 'AI Low Volatility (July)', createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(), source: 'AI-Generated', status: 'Active', configData: { defaultRiskPerTrade: 0.8, maxPortfolioDrawdown: 8 }, strategyName: 'Mean Reversion Scalper', performanceSummary: '+1.1% last run' },\n     { id: 'cfg-user-1', name: 'My Conservative Setup', createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(), source: 'User-Saved', status: 'Active', configData: { defaultRiskPerTrade: 0.5, maxPortfolioDrawdown: 10, allowedAssetTypes: ['stock', 'etf'] } },\n     { id: 'cfg-old-1', name: 'Old Crypto Config', createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(), source: 'User-Saved', status: 'Archived', configData: { defaultRiskPerTrade: 3, defaultLeverage: 20, allowedAssetTypes: ['crypto'] } },\n];\n\n\n// --- Helper Functions ---\n\n// Simulate potential API/DB errors\nconst simulateError = (probability = 0.1): void => {\n    if (Math.random() < probability) {\n        console.warn(`Simulating a service error (probability: ${probability})`);\n        throw new Error(\"Simulated settings service error.\");\n    }\n}\n\nconst simulateDelay = (min = 200, max = 500): Promise<void> => {\n    return new Promise(resolve => setTimeout(resolve, min + Math.random() * (max - min)));\n}\n\n\n// --- Service Functions ---\n\n/**\n * Fetches the current credentials (LLM providers, Broker configs, SerpAPI key).\n * NOTE: In a real app, sensitive data like API keys should NOT be sent to the frontend.\n * This mock function returns redacted data for demonstration.\n */\nexport async function getCredentials(): Promise<{ llmProviders: LLMProviderConfig[], brokerConfigs: BrokerConfig[], serpApiKey?: string }> {\n    console.log(\"SERVICE: Fetching credentials (mock, redacted)\");\n    await simulateDelay();\n    return {\n        llmProviders: mockCredentials.llmProviders.map(p => ({ ...p, apiKey: p.apiKey ? '******' : undefined })),\n        brokerConfigs: mockCredentials.brokerConfigs.map(b => ({ ...b, apiKey: b.apiKey ? '******' : undefined, apiSecret: b.apiSecret ? '******' : undefined })),\n        serpApiKey: mockCredentials.serpApiKey ? '******' : undefined,\n    };\n}\n\n/**\n * Saves updated credentials to the backend.\n * The backend must handle secure storage.\n * @param credentials The credentials object.\n */\nexport async function saveCredentials(credentials: { llmProviders?: LLMProviderConfig[], brokerConfigs?: BrokerConfig[], serpApiKey?: string }): Promise<void> {\n    console.log(\"SERVICE: Saving credentials (mock)\");\n    await simulateDelay(500, 1000);\n    simulateError(0.1);\n\n    // Mock update: Merge new data\n    if (credentials.llmProviders) {\n        mockCredentials.llmProviders = credentials.llmProviders.map((p, index) => ({\n             id: p.id || `llm-${p.providerType}-${Date.now()}-${index}`,\n             ...p\n        }));\n    }\n    if (credentials.brokerConfigs) {\n        mockCredentials.brokerConfigs = credentials.brokerConfigs.map((b, index) => ({\n            id: b.id || `broker-${b.brokerType}-${Date.now()}-${index}`,\n            ...b\n        }));\n    }\n    if (credentials.serpApiKey !== undefined) {\n        mockCredentials.serpApiKey = credentials.serpApiKey;\n    }\n\n    console.log(\"SERVICE: Mock credentials updated.\", mockCredentials);\n}\n\n\n/**\n * Tests the connection for a given LLM provider configuration.\n * @param providerConfig The configuration of the LLM provider to test.\n * @returns A promise resolving to an object with a success message or throwing an error.\n */\nexport async function testLLMConnection(providerConfig: LLMProviderConfig): Promise<{ success: boolean; message?: string }> {\n    console.log(`SERVICE: Testing LLM connection for ${providerConfig.providerType} (mock)`);\n    await simulateDelay(400, 800);\n    const shouldFail = Math.random() < 0.15;\n    if (shouldFail) {\n        console.error(`SERVICE: Mock LLM connection test FAILED for ${providerConfig.providerType}`);\n        throw new Error(`Connection failed. Check API key or URL.`);\n    }\n    console.log(`SERVICE: Mock LLM connection test SUCCEEDED for ${providerConfig.providerType}`);\n    return { success: true, message: `Successfully listed models (mock).` };\n}\n\n/**\n * Tests the connection for a given Broker configuration.\n * @param brokerConfig The configuration of the broker to test.\n * @returns A promise resolving to an object with a success message or throwing an error.\n */\nexport async function testBrokerConnection(brokerConfig: BrokerConfig): Promise<{ success: boolean; message?: string }> {\n    console.log(`SERVICE: Testing Broker connection for ${brokerConfig.brokerType} (mock)`);\n    await simulateDelay(500, 1000);\n    const shouldFail = Math.random() < 0.2;\n    if (shouldFail) {\n        console.error(`SERVICE: Mock Broker connection test FAILED for ${brokerConfig.brokerType}`);\n        throw new Error(`Connection failed. Check credentials or broker status.`);\n    }\n    console.log(`SERVICE: Mock Broker connection test SUCCEEDED for ${brokerConfig.brokerType}`);\n    return { success: true, message: `Account details fetched successfully (mock).` };\n}\n\n\n/**\n * Fetches the current trading settings.\n */\nexport async function getTradingSettings(): Promise<TradingSettings> {\n    console.log(\"SERVICE: Fetching trading settings (mock)\");\n    await simulateDelay();\n    return { ...mockTradingSettings }; // Return a copy\n}\n\n/**\n * Saves updated trading settings to the backend.\n * @param settings The updated trading settings.\n */\nexport async function saveTradingSettings(settings: TradingSettings): Promise<void> {\n    console.log(\"SERVICE: Saving trading settings (mock)\");\n    await simulateDelay(300, 600);\n    simulateError(0.05);\n    mockTradingSettings = { ...settings };\n    console.log(\"SERVICE: Mock trading settings updated.\");\n}\n\n// --- AI Configuration Management ---\n\nexport async function getAIConfigSuggestions(): Promise<SavedConfig[]> {\n     console.log(\"SERVICE: Fetching AI config suggestions (mock)\");\n     await simulateDelay(300, 700);\n     return mockSavedConfigs.filter(c => c.source === 'AI-Generated' && c.status === 'Active');\n}\n\nexport async function getSavedConfigs(includeArchived = false): Promise<SavedConfig[]> {\n     console.log(`SERVICE: Fetching saved configs (includeArchived: ${includeArchived}) (mock)`);\n     await simulateDelay(400, 800);\n     const filtered = includeArchived\n         ? [...mockSavedConfigs]\n         : mockSavedConfigs.filter(c => c.status !== 'Archived');\n    return filtered;\n}\n\nexport async function archiveConfig(configId: string): Promise<SavedConfig | null> {\n    console.log(`SERVICE: Archiving config ${configId} (mock)`);\n    await simulateDelay();\n    simulateError(0.05);\n    const index = mockSavedConfigs.findIndex(c => c.id === configId);\n    if (index === -1) return null;\n    mockSavedConfigs[index].status = 'Archived';\n    console.log(`SERVICE: Config ${configId} archived.`);\n    return { ...mockSavedConfigs[index] };\n}\n\nexport async function deleteConfig(configId: string): Promise<boolean> {\n    console.log(`SERVICE: Deleting config ${configId} (mock)`);\n    await simulateDelay();\n    simulateError(0.1);\n    const initialLength = mockSavedConfigs.length;\n    mockSavedConfigs = mockSavedConfigs.filter(c => c.id !== configId);\n    const deleted = mockSavedConfigs.length < initialLength;\n     if (deleted) {\n        console.log(`SERVICE: Config ${configId} deleted.`);\n    } else {\n         console.warn(`SERVICE: Config ${configId} not found for deletion.`);\n    }\n    return deleted;\n}\n\nexport async function applyConfiguration(config: SavedConfig): Promise<void> {\n     console.log(`SERVICE: Applying configuration ${config.id} (${config.name}) (mock)`);\n     await simulateDelay(300, 500);\n     simulateError(0.05);\n     mockTradingSettings = {\n         ...mockTradingSettings,\n         ...config.configData,\n     };\n     console.log(`SERVICE: Configuration ${config.name} applied (mock).`);\n     const index = mockSavedConfigs.findIndex(c => c.id === config.id);\n     if (index !== -1 && mockSavedConfigs[index].source === 'AI-Generated') {\n         console.log(`SERVICE: Suggestion ${config.id} considered applied.`);\n     }\n}\n\n\n// --- LLM Provider Specific Functions ---\n\n/**\n * Fetches a list of available models for a given LLM provider type.\n * This is a MOCK function. A real implementation would make API calls to the respective LLM provider.\n * @param providerType The type of the LLM provider.\n * @param apiKey Optional API key if needed for the provider's API.\n * @returns A promise resolving to an array of model name strings.\n */\nexport async function getAvailableLlmModels(providerType: LLMProviderConfig['providerType'], apiKey?: string): Promise<string[]> {\n    console.log(`SERVICE: Fetching available models for ${providerType} (mock)`);\n    await simulateDelay();\n    // SimulateError if API key is missing for providers that need it (except local)\n    if (providerType !== 'local' && !apiKey) {\n        // throw new Error(`API key is required to fetch models for ${providerType}.`);\n        // For mock, return empty or default if no key, rather than throwing error here\n        return [];\n    }\n\n    switch (providerType) {\n        case 'google':\n            return ['gemini-2.0-flash', 'gemini-1.5-pro-latest', 'gemini-1.5-flash-latest', 'gemini-1.0-pro'];\n        case 'openai':\n            return ['gpt-4-turbo', 'gpt-4', 'gpt-3.5-turbo', 'dall-e-3'];\n        case 'anthropic':\n            return ['claude-3-opus-20240229', 'claude-3-sonnet-20240229', 'claude-3-haiku-20240307'];\n        case 'groq':\n            return ['llama3-8b-8192', 'llama3-70b-8192', 'mixtral-8x7b-32768', 'gemma-7b-it'];\n        case 'local':\n            // For local, models are usually self-managed. Could have a mechanism to list from Ollama, etc.\n            // Or user specifies model name directly.\n            return ['llama3:latest', 'mistral:latest', 'phi3:latest', 'custom-local-model']; // Example local models\n        default:\n            return [];\n    }\n}\n\n// --- Broker Specific Functions ---\n\n/**\n * Fetches the list of currently configured brokers.\n */\nexport async function getConfiguredBrokers(): Promise<BrokerConfig[]> {\n    console.log(\"SERVICE: Fetching configured brokers (mock)\");\n    await simulateDelay();\n    // Return copies to prevent direct mutation, redact sensitive fields\n    return mockCredentials.brokerConfigs.map(b => ({\n        ...b,\n        apiKey: b.apiKey ? '******' : undefined,\n        apiSecret: b.apiSecret ? '******' : undefined,\n    }));\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1809, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/services/broker-service.ts"],"sourcesContent":["// src/services/broker-service.ts\n\n/**\n * @fileOverview Service functions for interacting with the configured broker API.\n * Replace mock implementations with actual API calls to your broker (e.g., Lumibot's interface, Alpaca, etc.).\n */\n\n// Mock data for available assets - replace with actual broker API call\nconst mockAssets: string[] = [\n    'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'NVDA', 'TSLA',\n    'BTC/USD', 'ETH/USD', 'SOL/USD', // Crypto examples\n    'EUR/USD', 'GBP/USD', 'USD/JPY', // Forex examples\n    'SPY', 'QQQ', // ETF examples\n];\n\n/**\n * Fetches the list of tradable assets available from the configured broker.\n * TODO: Replace with actual broker API call.\n * @returns A promise that resolves to an array of asset symbols (strings).\n */\nexport async function getAvailableAssets(brokerId?: string): Promise<string[]> {\n    console.log(`Fetching available assets from broker${brokerId ? ` (ID: ${brokerId})` : ''}...`);\n    \n    // Check if a broker is connected\n    if (!brokerId) {\n        // Get all configured brokers to check if any are available\n        try {\n            const { getConfiguredBrokers } = await import('./settings-service');\n            const brokers = await getConfiguredBrokers();\n            \n            if (!brokers || brokers.length === 0) {\n                console.log(\"No brokers configured. Cannot fetch assets.\");\n                return []; // Return empty array if no brokers are configured\n            }\n            \n            // If no specific broker ID was provided but brokers exist,\n            // we'll use the first one in the list for backward compatibility\n            brokerId = brokers[0].id;\n        } catch (error) {\n            console.error(\"Error checking for configured brokers:\", error);\n            return []; // Return empty array on error\n        }\n    }\n    \n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 400 + Math.random() * 200));\n\n    // --- Real implementation ---\n    // 1. Get broker credentials securely (e.g., from backend config).\n    // 2. Instantiate the broker API client (e.g., Lumibot Broker or other).\n    // 3. Call the appropriate method to list tradable assets/symbols.\n    // 4. Handle potential errors from the API call.\n    // -------------------------\n\n    console.log(\"Fetched available assets:\", mockAssets.length);\n    return [...mockAssets]; // Return a copy\n}\n\n/**\n * Checks if tick data is available for the specified asset and timeframe.\n * @param symbol The asset symbol to check\n * @param timeframe The timeframe to check\n * @returns A promise resolving to a boolean indicating if data is available\n */\nexport async function isTickDataAvailable(symbol: string, timeframe: string): Promise<boolean> {\n    console.log(`Checking if tick data is available for ${symbol} (${timeframe})...`);\n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 300 + Math.random() * 200));\n    \n    // Mock implementation - randomly return true/false\n    // In a real implementation, this would check with the backend/database\n    const isAvailable = Math.random() > 0.5;\n    console.log(`Tick data for ${symbol} (${timeframe}) is ${isAvailable ? 'available' : 'not available'}`);\n    return isAvailable;\n}\n\n/**\n * Downloads tick data for the specified asset, timeframe, and date range.\n * @param symbol The asset symbol to download data for\n * @param timeframe The timeframe to download\n * @param startDate The start date for the data\n * @param endDate The end date for the data\n * @returns A promise resolving to a boolean indicating if the download was successful\n */\nexport async function downloadTickData(\n    symbol: string,\n    timeframe: string,\n    startDate: string,\n    endDate: string\n): Promise<boolean> {\n    console.log(`Downloading tick data for ${symbol} (${timeframe}) from ${startDate} to ${endDate}...`);\n    // Simulate API call delay - longer for download\n    await new Promise(resolve => setTimeout(resolve, 1500 + Math.random() * 1000));\n    \n    // Mock implementation - randomly succeed/fail\n    // In a real implementation, this would call the backend API to download data\n    const isSuccessful = Math.random() > 0.2; // 80% success rate\n    console.log(`Tick data download for ${symbol} (${timeframe}) ${isSuccessful ? 'succeeded' : 'failed'}`);\n    return isSuccessful;\n}\n\n/**\n * (Optional) Fetches account details from the broker.\n * TODO: Implement actual API call.\n * @returns A promise resolving to account information (e.g., balance, buying power).\n */\nexport async function getAccountDetails(): Promise<Record<string, any>> {\n    console.log(\"Fetching account details from broker...\");\n    await new Promise(resolve => setTimeout(resolve, 300));\n    // Call broker API for account info\n    return { balance: 50000, buyingPower: 100000, currency: 'USD' }; // Mock data\n}\n\n// Add other broker-related functions as needed (e.g., placeOrder, getPositions, etc.)\n"],"names":[],"mappings":"AAAA,iCAAiC;AAEjC;;;CAGC,GAED,uEAAuE;;;;;;;AACvE,MAAM,aAAuB;IACzB;IAAQ;IAAQ;IAAS;IAAQ;IAAQ;IACzC;IAAW;IAAW;IACtB;IAAW;IAAW;IACtB;IAAO;CACV;AAOM,eAAe,mBAAmB,QAAiB;IACtD,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;IAE7F,iCAAiC;IACjC,IAAI,CAAC,UAAU;QACX,2DAA2D;QAC3D,IAAI;YACA,MAAM,EAAE,oBAAoB,EAAE,GAAG;YACjC,MAAM,UAAU,MAAM;YAEtB,IAAI,CAAC,WAAW,QAAQ,MAAM,KAAK,GAAG;gBAClC,QAAQ,GAAG,CAAC;gBACZ,OAAO,EAAE,EAAE,kDAAkD;YACjE;YAEA,2DAA2D;YAC3D,iEAAiE;YACjE,WAAW,OAAO,CAAC,EAAE,CAAC,EAAE;QAC5B,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,0CAA0C;YACxD,OAAO,EAAE,EAAE,8BAA8B;QAC7C;IACJ;IAEA,0BAA0B;IAC1B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,MAAM,KAAK,MAAM,KAAK;IAEvE,8BAA8B;IAC9B,kEAAkE;IAClE,wEAAwE;IACxE,kEAAkE;IAClE,gDAAgD;IAChD,4BAA4B;IAE5B,QAAQ,GAAG,CAAC,6BAA6B,WAAW,MAAM;IAC1D,OAAO;WAAI;KAAW,EAAE,gBAAgB;AAC5C;AAQO,eAAe,oBAAoB,MAAc,EAAE,SAAiB;IACvE,QAAQ,GAAG,CAAC,CAAC,uCAAuC,EAAE,OAAO,EAAE,EAAE,UAAU,IAAI,CAAC;IAChF,0BAA0B;IAC1B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,MAAM,KAAK,MAAM,KAAK;IAEvE,mDAAmD;IACnD,uEAAuE;IACvE,MAAM,cAAc,KAAK,MAAM,KAAK;IACpC,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,OAAO,EAAE,EAAE,UAAU,KAAK,EAAE,cAAc,cAAc,iBAAiB;IACtG,OAAO;AACX;AAUO,eAAe,iBAClB,MAAc,EACd,SAAiB,EACjB,SAAiB,EACjB,OAAe;IAEf,QAAQ,GAAG,CAAC,CAAC,0BAA0B,EAAE,OAAO,EAAE,EAAE,UAAU,OAAO,EAAE,UAAU,IAAI,EAAE,QAAQ,GAAG,CAAC;IACnG,gDAAgD;IAChD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,KAAK,MAAM,KAAK;IAExE,8CAA8C;IAC9C,6EAA6E;IAC7E,MAAM,eAAe,KAAK,MAAM,KAAK,KAAK,mBAAmB;IAC7D,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,OAAO,EAAE,EAAE,UAAU,EAAE,EAAE,eAAe,cAAc,UAAU;IACtG,OAAO;AACX;AAOO,eAAe;IAClB,QAAQ,GAAG,CAAC;IACZ,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,mCAAmC;IACnC,OAAO;QAAE,SAAS;QAAO,aAAa;QAAQ,UAAU;IAAM,GAAG,YAAY;AACjF,EAEA,sFAAsF","debugId":null}},
    {"offset": {"line": 1905, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1958, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/agents/_components/agent-configuration-dialog.new.tsx"],"sourcesContent":["// src/app/agents/_components/agent-configuration-dialog.new.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm, Controller, useFieldArray } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Loader2, PlusCircle, Trash2, Code, BrainCircuit } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  Agent, \n  AgentConfig, \n  getAgentConfig, \n  updateAgentConfig, \n  getSchemaForAgentType,\n  availableTools, \n  ToolName,\n  DependenciesSchema\n} from '@/services/agents-service.new';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { JsonInput } from './json-input';\nimport { cn } from '@/lib/utils';\nimport { getAvailableLlmModels, getConfiguredBrokers, LLMProviderConfig, BrokerConfig } from '@/services/settings-service';\nimport { getAvailableAssets as fetchBrokerAssets } from '@/services/broker-service'; // For fetching assets per broker\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\n\ninterface AgentConfigurationDialogProps {\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  agent: Agent;\n  onConfigSaved: (updatedAgent: Agent) => void;\n}\n\nexport function AgentConfigurationDialog({ isOpen, onOpenChange, agent, onConfigSaved }: AgentConfigurationDialogProps) {\n  const { toast } = useToast();\n  const [isSaving, setIsSaving] = useState(false);\n  const [isLoadingConfig, setIsLoadingConfig] = useState(true);\n  const [isLoadingLlmModels, setIsLoadingLlmModels] = useState(false);\n  const [availableLlmModels, setAvailableLlmModels] = useState<string[]>([]);\n  const [configuredBrokers, setConfiguredBrokers] = useState<BrokerConfig[]>([]);\n  const [brokerAssetCache, setBrokerAssetCache] = useState<Record<string, string[]>>({}); // Cache for broker assets { brokerId: ['asset1', 'asset2'] }\n  const [activeTab, setActiveTab] = useState(\"basic\");\n\n  // Get the appropriate schema for this agent type\n  const formSchema = getSchemaForAgentType(agent.type);\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n  });\n\n  // For watched assets in Data Agent\n  const { fields: watchedAssetsFields, append: appendWatchedAsset, remove: removeWatchedAsset } = useFieldArray({\n    control: form.control,\n    name: \"watched_assets\" as any, // Type assertion for conditional field\n  });\n\n  // Fetch initial data: agent config, LLM providers, configured brokers\n  useEffect(() => {\n    async function loadInitialData() {\n      if (!isOpen || !agent) return;\n      setIsLoadingConfig(true);\n      setIsLoadingLlmModels(true); // Assume loading models as well\n\n      try {\n        const [fetchedConfig, fetchedBrokers] = await Promise.all([\n          getAgentConfig(agent.id),\n          getConfiguredBrokers(), // Fetch configured brokers\n        ]);\n\n        setConfiguredBrokers(fetchedBrokers);\n\n        if (fetchedConfig) {\n          const validatedConfig = formSchema.parse(fetchedConfig);\n          form.reset(validatedConfig);\n          if ('llm_provider' in validatedConfig && validatedConfig.llm_provider) {\n            const models = await getAvailableLlmModels(validatedConfig.llm_provider);\n            setAvailableLlmModels(models);\n          }\n        } else {\n          const defaults = formSchema.parse({});\n          form.reset(defaults);\n          toast({ title: \"Config Not Found\", description: \"Using default configuration values.\", variant: \"default\"});\n        }\n      } catch (error) {\n        console.error(\"Error loading agent config or related data:\", error);\n        toast({ title: \"Error Loading Data\", description: `Could not load initial data. ${error instanceof Error ? error.message : ''}`, variant: \"destructive\" });\n        onOpenChange(false);\n      } finally {\n        setIsLoadingConfig(false);\n        setIsLoadingLlmModels(false);\n      }\n    }\n    loadInitialData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen, agent, formSchema]); // form.reset is safe inside useEffect if deps are correct\n\n  // Fetch LLM models when provider changes\n  const selectedLlmProvider = form.watch('llm_provider' as any);\n  useEffect(() => {\n    async function fetchModelsForProvider() {\n      if (!selectedLlmProvider) {\n        setAvailableLlmModels([]);\n        return;\n      }\n      setIsLoadingLlmModels(true);\n      try {\n        const models = await getAvailableLlmModels(selectedLlmProvider);\n        setAvailableLlmModels(models);\n      } catch (error) {\n        console.error(\"Error fetching LLM models for provider:\", error);\n        setAvailableLlmModels([]);\n        toast({ title: \"Error Fetching Models\", description: \"Could not load LLM models for the selected provider.\", variant: \"destructive\" });\n      } finally {\n        setIsLoadingLlmModels(false);\n      }\n    }\n    fetchModelsForProvider();\n  }, [selectedLlmProvider, toast]);\n\n  // Fetch assets when a broker is selected for a watched asset\n  const handleBrokerChangeForAsset = async (assetIndex: number, brokerId: string) => {\n    if (!brokerId || brokerAssetCache[brokerId]) return; // Already cached or no broker\n    try {\n      const assets = await fetchBrokerAssets(brokerId);\n      setBrokerAssetCache(prev => ({ ...prev, [brokerId]: assets }));\n    } catch (error) {\n      console.error(`Error fetching assets for broker ${brokerId}:`, error);\n      toast({ title: \"Error Fetching Assets\", description: `Could not load assets for broker.`, variant: \"destructive\" });\n    }\n  };\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsSaving(true);\n    console.log(\"Saving agent config:\", values);\n    try {\n      const updatedConfig = await updateAgentConfig(agent.id, values);\n      if (updatedConfig) {\n        const updatedAgent = { ...agent, config: updatedConfig };\n        onConfigSaved(updatedAgent);\n        onOpenChange(false); // Close dialog on success\n        toast({ title: \"Configuration Saved\", description: \"Agent configuration has been updated successfully.\" });\n      } else {\n        throw new Error(\"Failed to update configuration on the backend.\");\n      }\n    } catch (error: any) {\n      toast({\n        title: \"Error Saving Config\",\n        description: `Could not save configuration: ${error.message || 'Unknown error'}`,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  }\n\n  // Render form fields based on schema\n  const renderFormField = (fieldName: string, fieldSchema: any) => {\n    const description = fieldSchema.description || '';\n    const label = fieldName.replace(/_/g, ' ').replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()); // Auto-label\n\n    // System Prompt (Textarea)\n    if (fieldName === 'system_prompt') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label}</FormLabel>\n            <FormControl>\n              <Textarea \n                placeholder={`Enter ${label}...`} \n                className=\"min-h-[150px] font-mono text-sm\" \n                {...field} \n                value={field.value || ''} \n                disabled={isSaving}\n              />\n            </FormControl>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // LLM Provider Selection\n    if (fieldName === 'llm_provider') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label}</FormLabel>\n            <Select \n              onValueChange={(value) => { \n                field.onChange(value); \n                form.setValue('llm_model' as any, ''); \n              }} \n              value={field.value} \n              disabled={isSaving || isLoadingConfig}\n            >\n              <FormControl><SelectTrigger><SelectValue placeholder=\"Select LLM provider...\" /></SelectTrigger></FormControl>\n              <SelectContent>\n                <SelectItem value=\"openai\">OpenAI</SelectItem>\n                <SelectItem value=\"google\">Google</SelectItem>\n                <SelectItem value=\"anthropic\">Anthropic</SelectItem>\n                <SelectItem value=\"groq\">Groq</SelectItem>\n                <SelectItem value=\"local\">Local</SelectItem>\n              </SelectContent>\n            </Select>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // LLM Model Selection\n    if (fieldName === 'llm_model') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label}</FormLabel>\n            <Select \n              onValueChange={field.onChange} \n              value={field.value || ''} \n              disabled={isSaving || isLoadingLlmModels || !selectedLlmProvider}\n            >\n              <FormControl>\n                <SelectTrigger>\n                  <SelectValue placeholder={isLoadingLlmModels ? \"Loading models...\" : \"Select model...\"} />\n                </SelectTrigger>\n              </FormControl>\n              <SelectContent>\n                {isLoadingLlmModels && <div className=\"p-2 text-sm text-muted-foreground\">Loading...</div>}\n                {!isLoadingLlmModels && availableLlmModels.map(model => (\n                  <SelectItem key={model} value={model}>{model}</SelectItem>\n                ))}\n                {!isLoadingLlmModels && availableLlmModels.length === 0 && (\n                  <div className=\"p-2 text-sm text-muted-foreground\">No models found or provider not selected.</div>\n                )}\n              </SelectContent>\n            </Select>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Broker Selection (for Execution Agent)\n    if (fieldName === 'broker_id' && agent.type === 'Execution Agent') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label}</FormLabel>\n            <Select \n              onValueChange={field.onChange} \n              value={field.value || ''} \n              disabled={isSaving || isLoadingConfig || configuredBrokers.length === 0}\n            >\n              <FormControl><SelectTrigger><SelectValue placeholder=\"Select configured broker...\" /></SelectTrigger></FormControl>\n              <SelectContent>\n                {configuredBrokers.map(b => (\n                  <SelectItem key={b.id} value={b.id!}>\n                    {b.brokerType.toUpperCase()} ({b.paperTrading ? \"Paper\" : \"Live\"})\n                  </SelectItem>\n                ))}\n                {configuredBrokers.length === 0 && (\n                  <div className=\"p-2 text-sm text-muted-foreground\">No brokers configured in settings.</div>\n                )}\n              </SelectContent>\n            </Select>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Watched Assets (for Data Agent)\n    if (fieldName === 'watched_assets' && agent.type === 'Data Agent') {\n      return (\n        <div key={fieldName} className=\"space-y-4 p-4 border rounded-md\">\n          <FormLabel className=\"text-base font-medium\">{label}</FormLabel>\n          <FormDescription>{description}</FormDescription>\n          {watchedAssetsFields.map((assetField, index) => (\n            <div key={assetField.id} className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end p-3 border rounded-md relative\">\n              <FormField \n                control={form.control} \n                name={`watched_assets.${index}.broker_id` as any} \n                render={({ field }) => (\n                  <FormItem className=\"col-span-1\">\n                    <FormLabel>Broker</FormLabel>\n                    <Select \n                      onValueChange={(value) => { \n                        field.onChange(value); \n                        handleBrokerChangeForAsset(index, value); \n                        form.setValue(`watched_assets.${index}.symbol` as any, ''); \n                      }} \n                      value={field.value} \n                      disabled={isSaving || isLoadingConfig}\n                    >\n                      <FormControl><SelectTrigger><SelectValue placeholder=\"Broker...\" /></SelectTrigger></FormControl>\n                      <SelectContent>\n                        {configuredBrokers.map(b => (\n                          <SelectItem key={b.id} value={b.id!}>\n                            {b.brokerType.toUpperCase()} ({b.paperTrading ? \"Paper\" : \"Live\"})\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )} \n              />\n              <FormField \n                control={form.control} \n                name={`watched_assets.${index}.symbol` as any} \n                render={({ field }) => (\n                  <FormItem className=\"col-span-1\">\n                    <FormLabel>Asset Symbol</FormLabel>\n                    <Select \n                      onValueChange={field.onChange} \n                      value={field.value} \n                      disabled={isSaving || !form.watch(`watched_assets.${index}.broker_id` as any)}\n                    >\n                      <FormControl><SelectTrigger><SelectValue placeholder=\"Asset...\" /></SelectTrigger></FormControl>\n                      <SelectContent>\n                        {(brokerAssetCache[form.watch(`watched_assets.${index}.broker_id` as any)] || []).map(asset => (\n                          <SelectItem key={asset} value={asset}>{asset}</SelectItem>\n                        ))}\n                        {!brokerAssetCache[form.watch(`watched_assets.${index}.broker_id` as any)] && (\n                          <div className=\"p-2 text-sm\">Select broker to load assets.</div>\n                        )}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )} \n              />\n              <Button \n                type=\"button\" \n                variant=\"ghost\" \n                size=\"icon\" \n                onClick={() => removeWatchedAsset(index)} \n                disabled={isSaving || watchedAssetsFields.length <= 1} \n                className=\"col-span-1 md:col-span-auto text-destructive hover:text-destructive self-center justify-self-end absolute top-1 right-1 md:static\"\n              >\n                <Trash2 className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Remove Asset</span>\n              </Button>\n            </div>\n          ))}\n          <Button \n            type=\"button\" \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={() => appendWatchedAsset({ broker_id: '', symbol: '' })} \n            disabled={isSaving}\n          >\n            <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Asset to Watch\n          </Button>\n        </div>\n      );\n    }\n\n    // Enabled Tools Selection\n    if (fieldName === 'enabled_tools') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem className=\"space-y-3 p-4 border rounded-md\">\n            <FormLabel className=\"text-base font-medium\">{label}</FormLabel>\n            <FormDescription>{description}</FormDescription>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n              {availableTools.map((tool) => (\n                <FormField key={tool.name} control={form.control} name={fieldName} render={({ field: itemField }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 p-3 border rounded-md hover:bg-muted/50\">\n                    <FormControl>\n                      <Checkbox\n                        checked={(itemField.value as ToolName[])?.includes(tool.name)}\n                        onCheckedChange={(checked) => {\n                          const currentValue = (itemField.value as ToolName[]) || [];\n                          return checked\n                            ? itemField.onChange([...currentValue, tool.name])\n                            : itemField.onChange(currentValue.filter(name => name !== tool.name));\n                        }}\n                        disabled={isSaving}\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel className=\"font-normal\">{tool.name}</FormLabel>\n                      <FormDescription className=\"text-xs\">{tool.description}</FormDescription>\n                    </div>\n                  </FormItem>\n                )} />\n              ))}\n            </div>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Dependencies as JSON Input\n    if (fieldName === 'dependencies') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label}</FormLabel>\n            <FormControl>\n              <JsonInput \n                value={field.value || {}} \n                onChange={field.onChange} \n                placeholder={`Enter JSON for ${label}...`} \n                disabled={isSaving} \n              />\n            </FormControl>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Enum as Select\n    if (fieldSchema.typeName === 'ZodEnum') {\n      const options = fieldSchema._def.values as string[];\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label}</FormLabel>\n            <Select onValueChange={field.onChange} value={field.value} disabled={isSaving}>\n              <FormControl><SelectTrigger><SelectValue placeholder={`Select ${label}...`} /></SelectTrigger></FormControl>\n              <SelectContent>\n                {options.map(option => (\n                  <SelectItem key={option} value={option}>\n                    {option.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Boolean as Switch\n    if (fieldSchema.typeName === 'ZodBoolean') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n            <div className=\"space-y-0.5\">\n              <FormLabel className=\"text-base\">{label}</FormLabel>\n              <FormDescription>{description}</FormDescription>\n            </div>\n            <FormControl>\n              <Switch checked={field.value} onCheckedChange={field.onChange} disabled={isSaving} />\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Number Input\n    if (fieldSchema.typeName === 'ZodNumber') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label}</FormLabel>\n            <FormControl>\n              <Input \n                type=\"number\" \n                placeholder={`Enter ${label}...`} \n                {...field} \n                onChange={e => field.onChange(e.target.value === '' ? undefined : Number(e.target.value))} \n                value={field.value ?? ''} \n                min={fieldSchema._def.minValue ?? undefined}\n                max={fieldSchema._def.maxValue ?? undefined}\n                step={fieldSchema._def.checks?.find((c: any) => c.kind === 'int') ? 1 : undefined}\n                disabled={isSaving} \n              />\n            </FormControl>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Array of Strings as comma-separated Input\n    if (fieldSchema.typeName === 'ZodArray' && fieldSchema._def.type.typeName === 'ZodString') {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label} (comma-separated)</FormLabel>\n            <FormControl>\n              <Input \n                placeholder={`e.g., VAL1, VAL2`} \n                value={Array.isArray(field.value) ? field.value.join(', ') : ''} \n                onChange={e => field.onChange(e.target.value ? e.target.value.split(',').map(s => s.trim()).filter(Boolean) : [])} \n                disabled={isSaving} \n              />\n            </FormControl>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Prompt Templates as Textarea\n    const isPromptField = (\n      fieldName.toLowerCase().includes('prompt') ||\n      fieldName.toLowerCase().includes('template')\n    );\n    if (fieldSchema.typeName === 'ZodString' && isPromptField) {\n      return (\n        <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n          <FormItem>\n            <FormLabel>{label}</FormLabel>\n            <FormControl>\n              <Textarea \n                placeholder={`Enter ${label}...`} \n                className=\"min-h-[150px] font-mono text-sm\" \n                {...field} \n                value={field.value ?? ''} \n                disabled={isSaving} \n              />\n            </FormControl>\n            <FormDescription>{description}</FormDescription>\n            <FormMessage />\n          </FormItem>\n        )} />\n      );\n    }\n\n    // Default String Input\n    return (\n      <FormField key={fieldName} control={form.control} name={fieldName} render={({ field }) => (\n        <FormItem>\n          <FormLabel>{label}</FormLabel>\n          <FormControl>\n            <Input \n              placeholder={`Enter ${label}...`} \n              {...field} \n              value={field.value ?? ''} \n              disabled={isSaving} \n            />\n          </FormControl>\n          <FormDescription>{description}</FormDescription>\n          <FormMessage />\n        </FormItem>\n      )} />\n    );\n  };\n\n  // Group fields by category for tabs\n  const groupFieldsByCategory = () => {\n    // Cast to ZodObject to access shape property\n    const schema = (formSchema as z.ZodObject<any>).shape;\n    const fields = Object.entries(schema);\n    \n    const basicFields = [\n      'system_prompt', \n      'llm_provider', \n      'llm_model', \n      'retries', \n      'instrument', \n      'log_level'\n    ];\n    \n    const toolsFields = [\n      'enabled_tools'\n    ];\n    \n    const advancedFields = fields\n      .filter(([name]) => !basicFields.includes(name) && !toolsFields.includes(name))\n      .map(([name]) => name);\n    \n    return {\n      basic: fields.filter(([name]) => basicFields.includes(name)),\n      tools: fields.filter(([name]) => toolsFields.includes(name)),\n      advanced: fields.filter(([name]) => advancedFields.includes(name)),\n    };\n  };\n\n  const fieldGroups = groupFieldsByCategory();\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px] md:max-w-[700px] lg:max-w-[800px] max-h-[90vh] flex flex-col\">\n        <DialogHeader>\n          <DialogTitle>Configure: {agent.name}</DialogTitle>\n          <DialogDescription>\n            Adjust settings for \"{agent.type}\" using Pydantic-AI framework. Restart agent for changes to take effect.\n          </DialogDescription>\n        </DialogHeader>\n        \n        <Tabs defaultValue=\"basic\" className=\"w-full\" value={activeTab} onValueChange={setActiveTab}>\n          <TabsList className=\"grid grid-cols-3 mb-4\">\n            <TabsTrigger value=\"basic\" className=\"flex items-center gap-2\">\n              <BrainCircuit className=\"h-4 w-4\" />\n              <span>Basic</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"tools\" className=\"flex items-center gap-2\">\n              <Code className=\"h-4 w-4\" />\n              <span>Tools</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"advanced\" className=\"flex items-center gap-2\">\n              <PlusCircle className=\"h-4 w-4\" />\n              <span>Advanced</span>\n            </TabsTrigger>\n          </TabsList>\n          \n          <ScrollArea className=\"flex-1 pr-6 -mr-6 max-h-[60vh] overflow-y-auto\">\n            {isLoadingConfig ? (\n              <div className=\"flex justify-center items-center h-60\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n                <span className=\"ml-2 text-muted-foreground\">Loading config...</span>\n              </div>\n            ) : (\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 py-4 pr-1\">\n                  <TabsContent value=\"basic\" className=\"space-y-4 mt-0\">\n                    <Card>\n                      <CardHeader>\n                        <CardTitle>Basic Configuration</CardTitle>\n                        <CardDescription>Configure the core settings for this agent</CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        {fieldGroups.basic.map(([name, schema]) => renderFormField(name, schema))}\n                      </CardContent>\n                    </Card>\n                  </TabsContent>\n                  \n                  <TabsContent value=\"tools\" className=\"space-y-4 mt-0\">\n                    <Card>\n                      <CardHeader>\n                        <CardTitle>Tools Configuration</CardTitle>\n                        <CardDescription>Configure which tools this agent can use</CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        {fieldGroups.tools.map(([name, schema]) => renderFormField(name, schema))}\n                      </CardContent>\n                    </Card>\n                  </TabsContent>\n                  \n                  <TabsContent value=\"advanced\" className=\"space-y-4 mt-0\">\n                    <Card>\n                      <CardHeader>\n                        <CardTitle>Advanced Configuration</CardTitle>\n                        <CardDescription>Configure advanced settings specific to this agent type</CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        {fieldGroups.advanced.map(([name, schema]) => renderFormField(name, schema))}\n                      </CardContent>\n                    </Card>\n                  </TabsContent>\n                </form>\n              </Form>\n            )}\n          </ScrollArea>\n        </Tabs>\n        \n        <DialogFooter className=\"mt-auto pt-4 border-t\">\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"outline\" disabled={isSaving || isLoadingConfig}>\n              Cancel\n            </Button>\n          </DialogClose>\n          <Button \n            type=\"button\" \n            onClick={form.handleSubmit(onSubmit)} \n            disabled={isSaving || isLoadingConfig || !form.formState.isDirty}\n          >\n            {isSaving ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null} Save Changes\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3717, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/agents/page.tsx"],"sourcesContent":["// src/app/agents/page.tsx\n'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Button, buttonVariants } from \"@/components/ui/button\";\nimport { Bot, PlusCircle, Activity, Settings, FileCode, Loader2, AlertTriangle, Power, PowerOff, Trash2, Play, Pause } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from '@/lib/utils';\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n    AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { getAgents, activateAgent, deactivateAgent, deleteAgent, Agent } from '@/services/agents-service.new'; // Import Pydantic-AI services\nimport { AgentConfigurationDialog } from './_components/agent-configuration-dialog.new'; // Import the new Pydantic-AI dialog component\nimport type { AgentConfig } from '@/services/agents-service.new'; // Import Pydantic-AI config types\n\nexport default function AgentsPage() {\n    const { toast } = useToast();\n    const [agents, setAgents] = useState<Agent[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [actionLoading, setActionLoading] = useState<string | null>(null); // Track loading state for specific actions (e.g., \"toggle:agent-id\")\n    \n    // Helper function to check if an action is loading\n    const isActionInProgress = (actionId?: string): boolean => {\n        return actionLoading !== null && (actionId ? actionLoading === actionId : true);\n    };\n    const [isConfigDialogOpen, setIsConfigDialogOpen] = useState(false);\n    const [selectedAgentForConfig, setSelectedAgentForConfig] = useState<Agent | null>(null);\n\n    const loadAgents = useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const fetchedAgents = await getAgents();\n            setAgents(fetchedAgents);\n        } catch (err) {\n            console.error(\"Failed to fetch agents:\", err);\n            setError(\"Failed to load agent data. Please try again later.\");\n            toast({\n                title: \"Error\",\n                description: \"Could not fetch agent list.\",\n                variant: \"destructive\",\n            });\n        } finally {\n            setIsLoading(false);\n        }\n    }, [toast]); // Added toast dependency\n\n    useEffect(() => {\n        loadAgents();\n     }, [loadAgents]);\n\n\n    const handleAddAgent = () => {\n        // TODO: Implement logic to show a form/modal for adding a new agent\n        // This might involve selecting agent type, linking to strategy, etc.\n        toast({ title: \"Feature Not Implemented\", description: \"Functionality to add a new custom agent is not yet available.\" });\n    };\n\n    const handleViewLogs = (agentId: string) => {\n        // TODO: Implement navigation or modal display for agent logs\n        toast({ title: \"Feature Not Implemented\", description: `Log viewing for agent ${agentId} is not yet available.` });\n    };\n\n    const handleConfigureAgent = (agent: Agent) => {\n        setSelectedAgentForConfig(agent);\n        setIsConfigDialogOpen(true);\n    };\n\n     // Callback after config is saved in the dialog\n    const handleConfigSaved = (updatedAgent: Agent) => {\n        setAgents(prev => prev.map(a => a.id === updatedAgent.id ? updatedAgent : a));\n        setIsConfigDialogOpen(false); // Close the dialog\n         toast({ title: \"Configuration Saved\", description: `Settings for ${updatedAgent.name} updated.`});\n    };\n\n\n    const handleToggleAgentStatus = async (agent: Agent) => {\n        const actionId = `toggle:${agent.id}`;\n        setActionLoading(actionId);\n        const isActivating = agent.status === 'Idle';\n        const actionVerb = isActivating ? 'Activating' : 'Deactivating';\n\n        try {\n            const updatedAgent = isActivating\n                ? await activateAgent(agent.id)\n                : await deactivateAgent(agent.id);\n            if (updatedAgent) {\n                setAgents(prev => prev.map(a => a.id === updatedAgent.id ? updatedAgent : a));\n                toast({ title: `Agent ${isActivating ? 'Activated' : 'Deactivated'}`, description: `${updatedAgent.name} is now ${updatedAgent.status}.` });\n            } else {\n                 throw new Error(\"Agent not found or update failed.\");\n            }\n        } catch (err) {\n            console.error(`${actionVerb} agent error:`, err);\n            toast({ title: `Error ${actionVerb} Agent`, description: `Could not update status for ${agent.name}. ${err instanceof Error ? err.message : ''}`, variant: \"destructive\" });\n        } finally {\n            setActionLoading(null);\n        }\n    };\n\n     const handleDeleteAgent = async (agentId: string) => {\n         const actionId = `delete:${agentId}`;\n         setActionLoading(actionId);\n        try {\n            const success = await deleteAgent(agentId);\n            if (success) {\n                 setAgents(prev => prev.filter(a => a.id !== agentId));\n                 toast({ title: \"Agent Deleted\", description: `Agent ${agentId} has been removed.` });\n            } else {\n                // This case might happen if trying to delete a default agent or agent not found\n                toast({ title: \"Deletion Failed\", description: `Agent ${agentId} could not be deleted (it might be a default agent or not found).`, variant: \"destructive\" });\n            }\n        } catch (err) {\n             console.error(`Delete agent error:`, err);\n             toast({ title: \"Error Deleting Agent\", description: `Could not delete agent ${agentId}. ${err instanceof Error ? err.message : ''}`, variant: \"destructive\" });\n        } finally {\n            setActionLoading(null);\n        }\n    };\n\n\n    const getStatusBadgeVariant = (status: Agent['status']) => {\n        switch (status) {\n        case 'Active':\n            return 'default'; // Primary color\n        case 'Idle':\n            return 'secondary';\n        case 'Error':\n            return 'destructive';\n        default:\n            return 'outline';\n        }\n    };\n\n     const getAgentIcon = (type: Agent['type']) => {\n        switch (type) {\n            case 'Strategy Coding Agent': return <FileCode className=\"h-5 w-5 text-accent\" />;\n            case 'Execution Agent': return <Play className=\"h-5 w-5 text-green-500\" />; // Changed icon\n            case 'Data Agent': return <Activity className=\"h-5 w-5 text-blue-500\" />; // Changed icon\n            case 'Analysis Agent': return <Bot className=\"h-5 w-5 text-purple-500\" />; // Changed icon\n            default: return <Bot className=\"h-5 w-5 text-accent\" />;\n        }\n    };\n\n    const renderContent = () => {\n        if (isLoading) {\n            return (\n                 <div className=\"flex justify-center items-center py-10\">\n                    <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n                    <span className=\"ml-2 text-muted-foreground\">Loading agents...</span>\n                 </div>\n            );\n        }\n\n        if (error) {\n            return (\n                <div className=\"flex flex-col items-center justify-center py-10 text-destructive\">\n                     <AlertTriangle className=\"h-8 w-8 mb-2\" />\n                    <p>{error}</p>\n                     <Button onClick={loadAgents} variant=\"outline\" className=\"mt-4\">Retry</Button>\n                 </div>\n            );\n        }\n\n        if (agents.length === 0) {\n             return <p className=\"text-center text-muted-foreground py-10\">No agents found.</p>;\n        }\n\n        return (\n             <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                 {agents.map((agent) => {\n                     const isActionForThisAgent = actionLoading && actionLoading.endsWith(agent.id);\n                     const isToggling = actionLoading === `toggle:${agent.id}`;\n                     const isDeleting = actionLoading === `delete:${agent.id}`;\n                     const isConfiguring = actionLoading === `config:${agent.id}`;\n\n                     return (\n                         <Card key={agent.id} className={cn(isActionForThisAgent && \"opacity-70 pointer-events-none\")}>\n                             <CardHeader>\n                                 <div className=\"flex items-center justify-between\">\n                                     <CardTitle className=\"text-lg flex items-center gap-2\">\n                                         {getAgentIcon(agent.type)}\n                                         {agent.name}\n                                         {agent.isDefault && <Badge variant=\"outline\" className=\"text-xs font-normal\">Default</Badge>}\n                                     </CardTitle>\n                                      <Badge variant={getStatusBadgeVariant(agent.status)}>{agent.status}</Badge>\n                                 </div>\n                                 <CardDescription>{agent.type}</CardDescription>\n                             </CardHeader>\n                             <CardContent className=\"space-y-3\">\n                                  <p className=\"text-sm text-muted-foreground min-h-[40px]\">{agent.description}</p>\n                                   {agent.associatedStrategyIds && agent.associatedStrategyIds.length > 0 && (\n                                      <div className=\"text-xs text-muted-foreground\">\n                                          Strategies: {agent.associatedStrategyIds.join(', ')}\n                                      </div>\n                                  )}\n                                  <div className=\"flex justify-between text-sm\">\n                                      <span className=\"text-muted-foreground\">Tasks Completed:</span>\n                                      <span>{agent.tasksCompleted}</span>\n                                  </div>\n                                   <div className=\"flex justify-between text-sm\">\n                                      <span className=\"text-muted-foreground\">Errors:</span>\n                                       <span className={cn(agent.errors > 0 ? \"text-destructive\" : \"\")}>{agent.errors}</span>\n                                  </div>\n                                  <div className=\"flex space-x-2 pt-2\">\n                                     {/* Activate/Deactivate Button */}\n                                     <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => handleToggleAgentStatus(agent)}\n                                        disabled={!!isActionForThisAgent}\n                                        title={agent.status === 'Idle' ? 'Activate Agent' : 'Deactivate Agent'}\n                                     >\n                                        {isToggling ? (\n                                            <Loader2 className=\"mr-1 h-3 w-3 animate-spin\" />\n                                         ) : agent.status === 'Idle' ? (\n                                            <Power className=\"mr-1 h-3 w-3 text-green-500\" />\n                                        ) : (\n                                            <PowerOff className=\"mr-1 h-3 w-3 text-red-500\" />\n                                        )}\n                                         {agent.status === 'Idle' ? 'Activate' : 'Deactivate'}\n                                    </Button>\n                                     <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => handleConfigureAgent(agent)}\n                                        disabled={!!isActionForThisAgent || agent.status === 'Active'}\n                                        title={agent.status === 'Active' ? 'Deactivate agent first to configure' : 'Configure agent settings'}\n                                     >\n                                         <Settings className=\"mr-1 h-3 w-3\" /> Configure\n                                     </Button>\n                                     <Button variant=\"outline\" size=\"sm\" onClick={() => handleViewLogs(agent.id)} disabled={!!isActionForThisAgent}>\n                                         <Activity className=\"mr-1 h-3 w-3\" /> Logs\n                                     </Button>\n                                     {/* Delete Button (only for non-default) */}\n                                     {!agent.isDefault && (\n                                         <AlertDialog>\n                                            <AlertDialogTrigger asChild>\n                                                 <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive hover:text-destructive\" disabled={!!isActionForThisAgent}>\n                                                     {isDeleting ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Trash2 className=\"h-4 w-4\" />}\n                                                 </Button>\n                                            </AlertDialogTrigger>\n                                             <AlertDialogContent>\n                                                 <AlertDialogHeader>\n                                                     <AlertDialogTitle>Delete Agent?</AlertDialogTitle>\n                                                     <AlertDialogDescription>\n                                                         Are you sure you want to permanently delete the agent \"{agent.name}\"? This action cannot be undone.\n                                                     </AlertDialogDescription>\n                                                 </AlertDialogHeader>\n                                                 <AlertDialogFooter>\n                                                     <AlertDialogCancel>Cancel</AlertDialogCancel>\n                                                     <AlertDialogAction onClick={() => handleDeleteAgent(agent.id)} className={buttonVariants({ variant: \"destructive\" })}>\n                                                         Delete Agent\n                                                     </AlertDialogAction>\n                                                 </AlertDialogFooter>\n                                             </AlertDialogContent>\n                                         </AlertDialog>\n                                     )}\n                                  </div>\n                             </CardContent>\n                         </Card>\n                     );\n                  })}\n             </div>\n         );\n    };\n\n\n  return (\n      <>\n        <div className=\"space-y-6\">\n           <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n               <div>\n                <CardTitle>Manage Agents</CardTitle>\n                <CardDescription>Configure, monitor, activate, and deactivate your trading agents.</CardDescription>\n              </div>\n                <Button size=\"sm\" onClick={handleAddAgent} disabled={isLoading}>\n                    <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Custom Agent\n                </Button>\n            </CardHeader>\n             <CardContent>\n                 {renderContent()}\n             </CardContent>\n          </Card>\n        </div>\n\n        {/* Configuration Dialog */}\n         {selectedAgentForConfig && (\n            <AgentConfigurationDialog\n                isOpen={isConfigDialogOpen}\n                onOpenChange={setIsConfigDialogOpen}\n                agent={selectedAgentForConfig}\n                onConfigSaved={handleConfigSaved}\n            />\n        )}\n     </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}