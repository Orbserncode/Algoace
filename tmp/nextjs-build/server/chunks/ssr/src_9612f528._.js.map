{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, children, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </tr>\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;kBAER;;;;;;AAGL,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/ai/flows/suggest-strategy-config.ts"],"sourcesContent":["// This is an autogenerated file from Firebase Studio.\n\n'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for suggesting optimal configuration options for a trading strategy.\n *\n * The flow takes into account market conditions, risk tolerance, and historical performance data to provide potentially profitable strategies.\n *\n * @module ai/flows/suggest-strategy-config\n *\n * @interface SuggestStrategyConfigInput - The input type for the suggestStrategyConfig function.\n * @interface SuggestStrategyConfigOutput - The output type for the suggestStrategyConfig function.\n * @function suggestStrategyConfig - A function that triggers the suggestStrategyConfigFlow and returns the suggested configurations.\n */\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\n\nconst SuggestStrategyConfigInputSchema = z.object({\n  marketConditions: z\n    .string()\n    .describe('The current market conditions (e.g., bullish, bearish, volatile).'),\n  riskTolerance:\n    z.enum(['low', 'medium', 'high']).describe('The user’s risk tolerance level.'),\n  historicalPerformanceData: z\n    .string()\n    .describe(\n      'Historical performance data of different trading strategies as a JSON string.'\n    ),\n});\n\nexport type SuggestStrategyConfigInput = z.infer<typeof SuggestStrategyConfigInputSchema>;\n\nconst SuggestStrategyConfigOutputSchema = z.object({\n  strategyName: z.string().describe('The name of the suggested trading strategy.'),\n  configurationOptions: z\n    .record(z.any())\n    .describe('A JSON object containing the optimal configuration options for the strategy.'),\n  expectedReturn: z\n    .number()\n    .describe('The expected return of the suggested strategy, expressed as a percentage.'),\n  riskLevel: z.string().describe('The risk level associated with the suggested strategy.'),\n});\n\nexport type SuggestStrategyConfigOutput = z.infer<typeof SuggestStrategyConfigOutputSchema>;\n\nexport async function suggestStrategyConfig(\n  input: SuggestStrategyConfigInput\n): Promise<SuggestStrategyConfigOutput> {\n  return suggestStrategyConfigFlow(input);\n}\n\nconst suggestStrategyConfigPrompt = ai.definePrompt({\n  name: 'suggestStrategyConfigPrompt',\n  input: {\n    schema: z.object({\n      marketConditions: z\n        .string()\n        .describe('The current market conditions (e.g., bullish, bearish, volatile).'),\n      riskTolerance:\n        z.enum(['low', 'medium', 'high']).describe('The user’s risk tolerance level.'),\n      historicalPerformanceData: z\n        .string()\n        .describe(\n          'Historical performance data of different trading strategies as a JSON string.'\n        ),\n    }),\n  },\n  output: {\n    schema: z.object({\n      strategyName: z.string().describe('The name of the suggested trading strategy.'),\n      configurationOptions: z\n        .record(z.any())\n        .describe('A JSON object containing the optimal configuration options for the strategy.'),\n      expectedReturn: z\n        .number()\n        .describe('The expected return of the suggested strategy, expressed as a percentage.'),\n      riskLevel: z.string().describe('The risk level associated with the suggested strategy.'),\n    }),\n  },\n  prompt: `You are an expert in financial trading strategies.\n\n  Based on the current market conditions: {{{marketConditions}}}, the user's risk tolerance: {{{riskTolerance}}}, and the following historical performance data: {{{historicalPerformanceData}}}, suggest an optimal trading strategy with specific configuration options.\n\n  Return the strategy name, configuration options (as a JSON object), expected return (as a percentage), and risk level. The configuration options should be optimized to maximize return while considering the risk tolerance specified by the user.\n\n  Make sure the configurationOptions are a valid JSON object.`,\n});\n\nconst suggestStrategyConfigFlow = ai.defineFlow<\n  typeof SuggestStrategyConfigInputSchema,\n  typeof SuggestStrategyConfigOutputSchema\n>(\n  {\n    name: 'suggestStrategyConfigFlow',\n    inputSchema: SuggestStrategyConfigInputSchema,\n    outputSchema: SuggestStrategyConfigOutputSchema,\n  },\n  async input => {\n    const {output} = await suggestStrategyConfigPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;IA+ChC","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/services/strategies-service.ts"],"sourcesContent":["// src/services/strategies-service.ts\n\n/**\n * @fileOverview Service functions for fetching and managing trading strategies.\n * This service connects to the backend API to fetch and manage strategies.\n * The backend is built with FastAPI and uses SQLModel to interact with a SQLite database.\n */\nimport { SuggestStrategyConfigInput, SuggestStrategyConfigOutput } from '@/ai/flows/suggest-strategy-config'; // Ensure flow types are imported\nimport { suggestStrategyConfig as suggestStrategyConfigFlow } from '@/ai/flows/suggest-strategy-config'; // Import the actual flow function\n\nexport interface Strategy {\n  id: string;\n  name: string;\n  description: string;\n  status: 'Active' | 'Inactive' | 'Debugging' | 'Backtesting' | 'Archived'; // Added 'Archived'\n  pnl: number; // Consider fetching PnL dynamically or storing recent PnL\n  winRate: number; // Similarly, fetch/calculate win rate\n  // Add other relevant fields: parameters, associated agent ID, creation date, source (AI-gen/Uploaded), filename etc.\n  source?: 'AI-Generated' | 'Uploaded';\n  fileName?: string; // Store original filename if uploaded\n}\n\n// API base URL - use /api prefix to rely on Next.js rewrites\n\n// API base URL - use /api prefix to rely on Next.js rewrites\nconst API_BASE_URL = '/api';\n\n// Helper function to handle errors\nfunction handleError(error: any): never {\n  console.error('API Error:', error);\n  throw error;\n}\n\n// Helper function to convert backend strategy format to frontend format\nfunction convertBackendStrategy(backendStrategy: any): Strategy {\n  return {\n    id: `strat-${backendStrategy.id}`, // Convert numeric ID to string format with prefix\n    name: backendStrategy.name,\n    description: backendStrategy.description,\n    status: backendStrategy.status as Strategy['status'],\n    pnl: backendStrategy.pnl || 0,\n    winRate: backendStrategy.win_rate || 0,\n    source: backendStrategy.source as Strategy['source'],\n    fileName: backendStrategy.file_name\n  };\n}\n\n// Helper function to convert frontend strategy format to backend format\nfunction convertFrontendStrategy(frontendStrategy: Partial<Strategy>): any {\n  const backendStrategy: Record<string, any> = {\n    name: frontendStrategy.name,\n    description: frontendStrategy.description,\n    status: frontendStrategy.status,\n    source: frontendStrategy.source,\n    file_name: frontendStrategy.fileName,\n    pnl: frontendStrategy.pnl || 0,\n    win_rate: frontendStrategy.winRate || 0\n  };\n\n  // If ID is provided, extract the numeric part\n  if (frontendStrategy.id) {\n    const idMatch = frontendStrategy.id.match(/strat-(\\d+)/);\n    if (idMatch && idMatch[1]) {\n      backendStrategy.id = parseInt(idMatch[1], 10);\n    }\n  }\n\n  return backendStrategy;\n}\n\n\n/**\n * Fetches all strategies from the backend.\n * @param includeArchived Whether to include archived strategies. Defaults to false.\n * @returns A promise that resolves to an array of Strategy objects.\n */\nexport async function getStrategies(includeArchived: boolean = false): Promise<Strategy[]> {\n  console.log(`Fetching strategies (includeArchived: ${includeArchived})...`);\n  \n  try {\n    // Fetch strategies from the file-based API\n    const response = await fetch(`${API_BASE_URL}/file-strategies?include_archived=${includeArchived}`);\n    \n    if (!response.ok) {\n      console.error(`Error fetching strategies: ${response.statusText}`);\n      // Return empty array instead of throwing error\n      return [];\n    }\n    \n    const backendStrategies = await response.json();\n    \n    // Handle empty response\n    if (!backendStrategies || !Array.isArray(backendStrategies)) {\n      console.warn(\"Received invalid strategies data from backend\");\n      return [];\n    }\n    \n    // Convert backend format to frontend format\n    const strategies = backendStrategies.map((backendStrategy: any) => {\n      return {\n        id: backendStrategy.id || `strat-unknown-${Math.random().toString(36).substring(2, 9)}`, // Fallback ID if missing\n        name: backendStrategy.name || \"Unnamed Strategy\",\n        description: backendStrategy.description || \"No description available\",\n        status: (backendStrategy.status as Strategy['status']) || \"Active\",\n        pnl: backendStrategy.pnl || 0,\n        winRate: backendStrategy.win_rate || 0,\n        source: (backendStrategy.source as Strategy['source']) || \"Uploaded\",\n        fileName: backendStrategy.file_name || \"\"\n      };\n    });\n    \n    console.log(\"Fetched strategies:\", strategies.length);\n    return strategies;\n  } catch (error) {\n    console.error(\"Failed to fetch strategies:\", error);\n    // Return empty array instead of throwing error\n    return [];\n  }\n}\n\n/**\n * Fetches a single strategy by ID.\n * @param strategyId The ID of the strategy to fetch.\n * @returns A promise that resolves to the Strategy object or null if not found.\n */\nexport async function getStrategyById(strategyId: string): Promise<Strategy | null> {\n  console.log(`Fetching strategy by ID: ${strategyId}`);\n  \n  try {\n    // Fetch strategy from the file-based API\n    const response = await fetch(`${API_BASE_URL}/file-strategies/${strategyId}`);\n    \n    if (!response.ok) {\n      if (response.status === 404) {\n        console.log(`Strategy ${strategyId} not found.`);\n        return null;\n      }\n      throw new Error(`Error fetching strategy: ${response.statusText}`);\n    }\n    \n    const backendStrategy = await response.json();\n    \n    // Convert backend format to frontend format\n    const strategy: Strategy = {\n      id: backendStrategy.id,\n      name: backendStrategy.name,\n      description: backendStrategy.description,\n      status: backendStrategy.status as Strategy['status'],\n      pnl: backendStrategy.pnl || 0,\n      winRate: backendStrategy.win_rate || 0,\n      source: backendStrategy.source as Strategy['source'],\n      fileName: backendStrategy.file_name\n    };\n    \n    console.log(`Found strategy: ${strategy.name}`);\n    return strategy;\n  } catch (error) {\n    console.error(`Failed to fetch strategy ${strategyId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Fetches the code content for a given strategy ID.\n * In a real system, this would involve fetching the file content from storage\n * based on the strategy's fileName or database record.\n * @param strategyId The ID of the strategy.\n * @returns A promise resolving to the code string, or null if not found/applicable.\n */\nexport async function getStrategyCode(strategyId: string): Promise<string | null> {\n  console.log(`Fetching code for strategy ID: ${strategyId}`);\n  \n  try {\n    // Fetch strategy code from the file-based API\n    const response = await fetch(`${API_BASE_URL}/file-strategies/${strategyId}/code`);\n    \n    if (!response.ok) {\n      if (response.status === 404) {\n        console.log(`Code for strategy ${strategyId} not found.`);\n        return null;\n      }\n      throw new Error(`Error fetching strategy code: ${response.statusText}`);\n    }\n    \n    const result = await response.json();\n    return result.code;\n  } catch (error) {\n    console.error(`Failed to fetch code for strategy ${strategyId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Saves code for a strategy.\n * @param strategyId The ID of the strategy.\n * @param code The code to save.\n * @returns A promise that resolves to true if successful.\n */\nexport async function saveStrategyCode(strategyId: string, code: string): Promise<boolean> {\n  console.log(`Saving code for strategy ID: ${strategyId}`);\n  \n  try {\n    // Extract the numeric ID from the string ID\n    const idMatch = strategyId.match(/strat-(\\d+)/);\n    if (!idMatch || !idMatch[1]) {\n      console.error(`Invalid strategy ID format: ${strategyId}`);\n      return false;\n    }\n    \n    const numericId = idMatch[1];\n    \n    // Save strategy code to the API\n    const response = await fetch(`${API_BASE_URL}/strategies/${numericId}/code`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ code }),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Error saving strategy code: ${response.statusText}`);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error(`Failed to save code for strategy ${strategyId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Updates a strategy.\n * @param strategyId The ID of the strategy to update.\n * @param updates The updates to apply to the strategy.\n * @returns A promise that resolves to the updated Strategy object.\n */\nexport async function updateStrategy(strategyId: string, updates: Partial<Strategy>): Promise<Strategy> {\n  console.log(`Updating strategy ID: ${strategyId}`, updates);\n  \n  try {\n    // Extract the numeric ID from the string ID\n    const idMatch = strategyId.match(/strat-(\\d+)/);\n    if (!idMatch || !idMatch[1]) {\n      throw new Error(`Invalid strategy ID format: ${strategyId}`);\n    }\n    \n    const numericId = idMatch[1];\n    \n    // Convert frontend format to backend format\n    const backendUpdates = convertFrontendStrategy(updates);\n    \n    // Update strategy via the API\n    const response = await fetch(`${API_BASE_URL}/strategies/${numericId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(backendUpdates),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Error updating strategy: ${response.statusText}`);\n    }\n    \n    const backendStrategy = await response.json();\n    \n    // Convert backend format to frontend format\n    return convertBackendStrategy(backendStrategy);\n  } catch (error) {\n    console.error(`Failed to update strategy ${strategyId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Archives a strategy.\n * @param strategyId The ID of the strategy to archive.\n * @returns A promise that resolves to the archived Strategy object.\n */\nexport async function archiveStrategy(strategyId: string): Promise<Strategy> {\n  console.log(`Archiving strategy ID: ${strategyId}`);\n  \n  // Use updateStrategy to set status to 'Archived'\n  return updateStrategy(strategyId, { status: 'Archived' });\n}\n\n/**\n * Permanently deletes a strategy.\n * @param strategyId The ID of the strategy to delete.\n * @returns A promise that resolves to true if successful.\n */\nexport async function deleteStrategyPermanently(strategyId: string): Promise<boolean> {\n  console.log(`Deleting strategy ID: ${strategyId}`);\n  \n  try {\n    // Extract the numeric ID from the string ID\n    const idMatch = strategyId.match(/strat-(\\d+)/);\n    if (!idMatch || !idMatch[1]) {\n      throw new Error(`Invalid strategy ID format: ${strategyId}`);\n    }\n    \n    const numericId = idMatch[1];\n    \n    // Delete strategy via the API\n    const response = await fetch(`${API_BASE_URL}/strategies/${numericId}`, {\n      method: 'DELETE',\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Error deleting strategy: ${response.statusText}`);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error(`Failed to delete strategy ${strategyId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Creates a new strategy with a file.\n * @param strategy The strategy data.\n * @param file The strategy file.\n * @returns A promise that resolves to the created Strategy object.\n */\nexport async function addStrategyWithFile(strategy: Partial<Strategy>, file?: File): Promise<Strategy> {\n  console.log(`Creating new strategy:`, strategy);\n  \n  try {\n    // Convert frontend format to backend format\n    const backendStrategy = convertFrontendStrategy(strategy);\n    \n    // Create a FormData object to send the file\n    const formData = new FormData();\n    formData.append('strategy_in', JSON.stringify(backendStrategy));\n    \n    if (file) {\n      formData.append('strategy_file', file);\n    }\n    \n    // Create strategy via the API\n    const response = await fetch(`${API_BASE_URL}/strategies/`, {\n      method: 'POST',\n      body: formData,\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Error creating strategy: ${response.statusText}`);\n    }\n    \n    const createdStrategy = await response.json();\n    \n    // Convert backend format to frontend format\n    return convertBackendStrategy(createdStrategy);\n  } catch (error) {\n    console.error('Failed to create strategy:', error);\n    throw error;\n  }\n}\n\n/**\n * Suggests a strategy configuration based on user inputs.\n * @param input The input parameters for the suggestion.\n * @returns A promise that resolves to the suggested configuration.\n */\nexport async function suggestStrategyConfig(input: any): Promise<any> {\n  console.log(`Suggesting strategy config:`, input);\n  \n  try {\n    // Use the imported flow function\n    return await suggestStrategyConfigFlow(input);\n  } catch (error) {\n    console.error('Failed to suggest strategy config:', error);\n    throw error;\n  }\n}\n\n/**\n * Generates and tests a strategy from a suggestion.\n * @param suggestion The strategy suggestion.\n * @returns A promise that resolves to the created Strategy object.\n */\nexport async function generateAndTestStrategyFromSuggestion(suggestion: any): Promise<Strategy> {\n  console.log(`Generating strategy from suggestion:`, suggestion);\n  \n  try {\n    // Create a new strategy with the suggested configuration\n    const response = await fetch(`${API_BASE_URL}/strategies/generate`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(suggestion),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Error generating strategy: ${response.statusText}`);\n    }\n    \n    const generatedStrategy = await response.json();\n    \n    // Convert backend format to frontend format\n    return convertBackendStrategy(generatedStrategy);\n  } catch (error) {\n    console.error('Failed to generate strategy:', error);\n    throw error;\n  }\n}\n\n/**\n * Schedules automated strategy generation.\n * @param scheduleType The type of schedule (startup, daily, weekly).\n * @param config The configuration for the generation.\n * @returns A promise that resolves to true if successful.\n */\nexport async function scheduleStrategyGeneration(scheduleType: string, config: any): Promise<boolean> {\n  console.log(`Scheduling strategy generation (${scheduleType}):`, config);\n  \n  try {\n    // Schedule strategy generation via the API\n    const response = await fetch(`${API_BASE_URL}/strategies/schedule-generation`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        schedule_type: scheduleType,\n        generation_config: config,\n      }),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Error scheduling strategy generation: ${response.statusText}`);\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Failed to schedule strategy generation:', error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 866, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/strategies/_components/strategy-code-editor-dialog.tsx"],"sourcesContent":["// src/app/strategies/_components/strategy-code-editor-dialog.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Loader2, AlertTriangle } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Strategy } from '@/services/strategies-service';\nimport { getStrategyCode, saveStrategyCode } from '@/services/strategies-service';\n\ninterface StrategyCodeEditorDialogProps {\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  strategy: Strategy | null;\n}\n\nexport function StrategyCodeEditorDialog({ isOpen, onOpenChange, strategy }: StrategyCodeEditorDialogProps) {\n  const { toast } = useToast();\n  const [code, setCode] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchCode() {\n      if (isOpen && strategy) {\n        setIsLoading(true);\n        setError(null);\n        try {\n          const fetchedCode = await getStrategyCode(strategy.id);\n          if (fetchedCode) {\n            setCode(fetchedCode);\n          } else {\n            setCode(`# No code available for strategy: ${strategy.name}\\n# Source: ${strategy.source || 'Unknown'}\\n# This may be an AI-generated strategy without explicit code storage or an error.`);\n            if (strategy.source !== 'Uploaded' && strategy.source !== 'AI-Generated') {\n                 console.warn(`No specific code file expected for strategy source: ${strategy.source}`);\n            }\n          }\n        } catch (err) {\n          console.error(`Error fetching code for ${strategy.name}:`, err);\n          setError(`Failed to load strategy code. ${err instanceof Error ? err.message : 'Please try again.'}`);\n          setCode(`# Error loading code for strategy: ${strategy.name}`);\n        } finally {\n          setIsLoading(false);\n        }\n      } else {\n        // Clear state when dialog is closed or no strategy\n        setCode('');\n        setError(null);\n        setIsLoading(false);\n      }\n    }\n    fetchCode();\n  }, [isOpen, strategy]);\n\n  const handleSaveCode = async () => {\n    if (!strategy) return;\n    setIsSaving(true);\n    setError(null);\n    try {\n      const success = await saveStrategyCode(strategy.id, code);\n      if (success) {\n        toast({\n          title: \"Code Saved\",\n          description: `Code for strategy \"${strategy.name}\" has been updated.`,\n        });\n        onOpenChange(false); // Close dialog on successful save\n      } else {\n        throw new Error(\"Backend failed to save the code.\");\n      }\n    } catch (err) {\n      console.error(`Error saving code for ${strategy.name}:`, err);\n      setError(`Failed to save code. ${err instanceof Error ? err.message : 'Please try again.'}`);\n      toast({\n        title: \"Error Saving Code\",\n        description: `Could not save code for \"${strategy.name}\".`,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[80vw] lg:max-w-[70vw] xl:max-w-[60vw] h-[85vh] flex flex-col\">\n        <DialogHeader>\n          <DialogTitle>Edit Strategy Code: {strategy?.name || 'N/A'}</DialogTitle>\n          <DialogDescription>\n            Modify the Python code for the strategy \"{strategy?.name || 'N/A'}\".\n            Changes will be saved to the backend. Ensure code follows the Lumibot framework.\n          </DialogDescription>\n        </DialogHeader>\n\n        {isLoading && (\n          <div className=\"flex-1 flex items-center justify-center\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n            <span className=\"ml-2\">Loading code...</span>\n          </div>\n        )}\n\n        {!isLoading && (\n          <ScrollArea className=\"flex-1 border rounded-md bg-muted/20 my-4\">\n            <Textarea\n              value={code}\n              onChange={(e) => setCode(e.target.value)}\n              placeholder=\"# Enter your Lumibot strategy code here...\"\n              className=\"min-h-[60vh] font-mono text-xs p-4 border-0 focus-visible:ring-0 focus-visible:ring-offset-0 resize-none\"\n              disabled={isSaving}\n            />\n          </ScrollArea>\n        )}\n\n        {error && !isLoading && (\n          <div className=\"mt-2 p-2 text-sm text-destructive bg-destructive/10 rounded-md flex items-center\">\n            <AlertTriangle className=\"h-4 w-4 mr-2 shrink-0\" />\n            {error}\n          </div>\n        )}\n\n        <DialogFooter className=\"mt-auto pt-4 border-t\">\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"outline\" disabled={isSaving}>\n              Cancel\n            </Button>\n          </DialogClose>\n          <Button\n            type=\"button\"\n            onClick={handleSaveCode}\n            disabled={isSaving || isLoading || !strategy || !!error}\n          >\n            {isSaving ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n            Save Code\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1182, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/strategies/_components/strategy-table.tsx"],"sourcesContent":["// src/app/strategies/_components/strategy-table.tsx\n'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button, buttonVariants } from \"@/components/ui/button\";\nimport { Play, Pause, Edit, Trash2, Loader2, BrainCircuit, FileCode, Archive, Eye } from \"lucide-react\"; // Added Archive, Eye icons\nimport { cn } from \"@/lib/utils\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n    AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport type { Strategy } from '@/services/strategies-service';\nimport { updateStrategy, archiveStrategy, deleteStrategyPermanently } from '@/services/strategies-service';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\nimport { StrategyCodeEditorDialog } from './strategy-code-editor-dialog'; // Import the new editor dialog\n\ninterface StrategyTableProps {\n  strategies: Strategy[];\n  onStrategyUpdate: (updatedStrategy: Strategy) => void; // Callback for successful updates/archive\n  onStrategyDelete: (strategyId: string) => void; // Callback for successful permanent deletion\n}\n\nexport function StrategyTable({ strategies, onStrategyUpdate, onStrategyDelete }: StrategyTableProps) {\n  const { toast } = useToast();\n  const [loadingAction, setLoadingAction] = useState<string | null>(null); // Format: \"action:strategyId\"\n  const [isEditorOpen, setIsEditorOpen] = useState(false);\n  const [selectedStrategyForEditor, setSelectedStrategyForEditor] = useState<Strategy | null>(null);\n\n\n  const handleToggleStatus = async (strategy: Strategy) => {\n    // Don't allow toggling for Archived strategies\n    if (strategy.status === 'Archived') return;\n\n    const action = strategy.status === 'Active' ? 'Pause' : 'Start';\n    const newStatus = strategy.status === 'Active' ? 'Inactive' : 'Active';\n    const actionId = `toggle:${strategy.id}`;\n\n    setLoadingAction(actionId);\n\n    try {\n      const updated = await updateStrategy(strategy.id, { status: newStatus });\n      if (updated) {\n        toast({\n          title: `Strategy ${action}d`,\n          description: `Strategy \"${updated.name}\" is now ${updated.status}.`,\n        });\n        onStrategyUpdate(updated);\n      } else {\n         throw new Error(\"Strategy not found or update failed.\");\n      }\n    } catch (error) {\n      console.error(`Failed to ${action} strategy ${strategy.id}:`, error);\n      toast({\n        title: `Error ${action}ing Strategy`,\n        description: `Could not ${action.toLowerCase()} strategy \"${strategy.name}\". ${error instanceof Error ? error.message : 'Please try again.'}`,\n        variant: \"destructive\",\n      });\n    } finally {\n       setLoadingAction(null);\n    }\n  };\n\n   const handleOpenEditor = (strategy: Strategy) => {\n     setSelectedStrategyForEditor(strategy);\n     setIsEditorOpen(true);\n   };\n\n\n  const handleArchiveAction = async (strategy: Strategy) => {\n     const actionId = `archive:${strategy.id}`;\n     setLoadingAction(actionId);\n\n     try {\n        const archived = await archiveStrategy(strategy.id);\n        if (archived) {\n            toast({\n                title: \"Strategy Archived\",\n                description: `Strategy \"${archived.name}\" has been archived. It will be hidden from the main list.`,\n            });\n            onStrategyUpdate(archived); // Use update callback to filter/re-render list\n        } else {\n             throw new Error(\"Strategy not found or archiving failed.\");\n        }\n     } catch (error) {\n         console.error(`Failed to archive strategy ${strategy.id}:`, error);\n         toast({\n            title: \"Error Archiving Strategy\",\n            description: `Could not archive strategy \"${strategy.name}\". ${error instanceof Error ? error.message : 'Please try again.'}`,\n            variant: \"destructive\",\n         });\n     } finally {\n         setLoadingAction(null);\n     }\n  };\n\n\n  const handleDeleteConfirm = async (strategy: Strategy) => {\n    const actionId = `delete:${strategy.id}`;\n    setLoadingAction(actionId);\n\n     try {\n        const deleted = await deleteStrategyPermanently(strategy.id);\n        if (deleted) {\n            toast({\n                title: \"Strategy Deleted Permanently\",\n                description: `Strategy \"${strategy.name}\" has been permanently deleted.`,\n            });\n            onStrategyDelete(strategy.id); // Use delete callback to remove from list\n        } else {\n             throw new Error(\"Strategy not found or deletion failed.\");\n        }\n     } catch (error) {\n         console.error(`Failed to delete strategy ${strategy.id}:`, error);\n         toast({\n            title: \"Error Deleting Strategy\",\n            description: `Could not permanently delete strategy \"${strategy.name}\". ${error instanceof Error ? error.message : 'Please try again.'}`,\n            variant: \"destructive\",\n         });\n     } finally {\n         setLoadingAction(null);\n     }\n  };\n\n\n  const getStatusBadgeVariant = (status: Strategy['status']) => {\n    switch (status) {\n      case 'Active':\n        return 'default'; // Primary (Blue)\n      case 'Inactive':\n        return 'secondary'; // Gray\n      case 'Debugging':\n      case 'Backtesting':\n        return 'outline'; // Outline\n      case 'Archived':\n        return 'destructive'; // Use destructive-like color for visibility\n      default:\n        return 'secondary';\n    }\n  };\n\n  const formatCurrency = (amount: number | undefined) => {\n     if (typeof amount !== 'number') return '-';\n     return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(amount);\n  }\n\n   const formatPercentage = (value: number | undefined) => {\n    if (typeof value !== 'number') return '-';\n    return `${value.toFixed(1)}%`;\n  }\n\n\n  return (\n     <>\n      <TooltipProvider>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead className=\"w-[200px]\">Name</TableHead>\n              <TableHead className=\"hidden lg:table-cell\">Description</TableHead>\n              <TableHead className=\"w-[100px]\">Status</TableHead>\n              <TableHead className=\"w-[100px] hidden md:table-cell\">Source</TableHead>\n              <TableHead className=\"text-right hidden sm:table-cell w-[120px]\">P&L (USD)</TableHead>\n              <TableHead className=\"text-right hidden lg:table-cell w-[100px]\">Win Rate</TableHead>\n              <TableHead className=\"text-right w-[200px]\">Actions</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {strategies.length === 0 && (\n              <TableRow>\n                <TableCell colSpan={7} className=\"h-24 text-center text-muted-foreground\">\n                  No strategies found. Use the \"Automated Strategy Generation\" section or \"Add New Strategy\" button.\n                </TableCell>\n              </TableRow>\n            )}\n            {strategies.map((strategy) => {\n              const isToggling = loadingAction === `toggle:${strategy.id}`;\n              const isArchiving = loadingAction === `archive:${strategy.id}`;\n              const isDeleting = loadingAction === `delete:${strategy.id}`;\n              const isAnyLoading = isToggling || isArchiving || isDeleting;\n\n              return (\n                <TableRow key={strategy.id} className={cn(isAnyLoading && \"opacity-60\")}>\n                  <TableCell className=\"font-medium\">{strategy.name}</TableCell>\n                  <TableCell className=\"hidden lg:table-cell text-sm text-muted-foreground max-w-xs truncate\" title={strategy.description}>{strategy.description}</TableCell>\n                  <TableCell>\n                    <Badge variant={getStatusBadgeVariant(strategy.status)}>{strategy.status}</Badge>\n                  </TableCell>\n                  <TableCell className=\"hidden md:table-cell\">\n                    {strategy.source && (\n                      <Tooltip>\n                        <TooltipTrigger asChild>\n                          <span className=\"flex items-center gap-1 text-muted-foreground\">\n                            {strategy.source === 'AI-Generated' ? <BrainCircuit className=\"h-4 w-4\" /> : <FileCode className=\"h-4 w-4\" />}\n                          </span>\n                        </TooltipTrigger>\n                        <TooltipContent>\n                          <p>{strategy.source}</p>\n                          {strategy.source === 'Uploaded' && strategy.fileName && (\n                            <p className=\"text-xs text-muted-foreground mt-1\">{strategy.fileName}</p>\n                          )}\n                        </TooltipContent>\n                      </Tooltip>\n                    )}\n                  </TableCell>\n                  <TableCell className={cn(\n                    \"text-right hidden sm:table-cell tabular-nums\",\n                    typeof strategy.pnl === 'number' && (strategy.pnl >= 0 ? \"text-green-600 dark:text-green-400\" : \"text-red-600 dark:text-red-400\")\n                  )}>{formatCurrency(strategy.pnl)}</TableCell>\n                  <TableCell className=\"text-right hidden lg:table-cell tabular-nums\">{formatPercentage(strategy.winRate)}</TableCell>\n                  <TableCell className=\"text-right\">\n                    <div className=\"flex justify-end space-x-1 items-center\">\n                      {isToggling && <Loader2 className=\"h-4 w-4 animate-spin text-muted-foreground mr-1\" />}\n                      {isArchiving && <Loader2 className=\"h-4 w-4 animate-spin text-muted-foreground mr-1\" />}\n                      {isDeleting && <Loader2 className=\"h-4 w-4 animate-spin text-destructive mr-1\" />}\n                      {!isAnyLoading && (\n                        <>\n                          {/* Start/Pause Button - Only if not Archived */}\n                          {(strategy.status === 'Active' || strategy.status === 'Inactive') && (\n                            <Tooltip>\n                              <TooltipTrigger asChild>\n                                <Button variant=\"ghost\" size=\"icon\" aria-label={strategy.status === 'Active' ? \"Pause Strategy\" : \"Start Strategy\"} onClick={() => handleToggleStatus(strategy)} disabled={isAnyLoading}>\n                                  {strategy.status === 'Active' ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\n                                </Button>\n                              </TooltipTrigger>\n                              <TooltipContent>\n                                <p>{strategy.status === 'Active' ? \"Pause Strategy\" : \"Start Strategy\"}</p>\n                              </TooltipContent>\n                            </Tooltip>\n                          )}\n\n                          {/* Edit/View Code Button */}\n                          <Tooltip>\n                            <TooltipTrigger asChild>\n                              <Button variant=\"ghost\" size=\"icon\" aria-label=\"Edit Strategy Code\" onClick={() => handleOpenEditor(strategy)} disabled={isAnyLoading}>\n                                <Edit className=\"h-4 w-4\" />\n                              </Button>\n                            </TooltipTrigger>\n                            <TooltipContent>\n                              <p>Edit/View Strategy Code</p>\n                            </TooltipContent>\n                          </Tooltip>\n\n                          {/* Archive/Delete Button */}\n                          <AlertDialog>\n                            <Tooltip>\n                              <TooltipTrigger asChild>\n                                <AlertDialogTrigger asChild>\n                                  {/* Show Archive icon if not archived, Trash if archived */}\n                                  <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive hover:text-destructive\" aria-label={strategy.status === 'Archived' ? \"Delete Permanently\" : \"Archive Strategy\"} disabled={isAnyLoading}>\n                                    {strategy.status === 'Archived' ? <Trash2 className=\"h-4 w-4\" /> : <Archive className=\"h-4 w-4\" />}\n                                  </Button>\n                                </AlertDialogTrigger>\n                              </TooltipTrigger>\n                              <TooltipContent>\n                                <p>{strategy.status === 'Archived' ? \"Delete Permanently\" : \"Archive or Delete\"}</p>\n                              </TooltipContent>\n                            </Tooltip>\n                            <AlertDialogContent>\n                              <AlertDialogHeader>\n                                <AlertDialogTitle>Confirm Action</AlertDialogTitle>\n                                <AlertDialogDescription>\n                                  {strategy.status === 'Archived'\n                                    ? `This action cannot be undone. This will permanently delete the archived strategy \"${strategy.name}\".`\n                                    : `Choose an action for strategy \"${strategy.name}\". Archiving will hide it from the main list but keep its data. Deleting is permanent.`}\n                                  {strategy.fileName && ` (File: ${strategy.fileName})`}\n                                </AlertDialogDescription>\n                              </AlertDialogHeader>\n                              <AlertDialogFooter>\n                                <AlertDialogCancel disabled={isDeleting || isArchiving}>Cancel</AlertDialogCancel>\n                                {/* Show Archive button only if not already archived */}\n                                {strategy.status !== 'Archived' && (\n                                  <Button\n                                    variant=\"outline\"\n                                    onClick={() => handleArchiveAction(strategy)}\n                                    disabled={isDeleting || isArchiving}\n                                  >\n                                    {isArchiving && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                                    Archive\n                                  </Button>\n                                )}\n                                <AlertDialogAction\n                                  onClick={() => handleDeleteConfirm(strategy)}\n                                  className={buttonVariants({ variant: \"destructive\" })}\n                                  disabled={isDeleting || isArchiving}\n                                >\n                                  {isDeleting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                                  Delete Permanently\n                                </AlertDialogAction>\n                              </AlertDialogFooter>\n                            </AlertDialogContent>\n                          </AlertDialog>\n                        </>\n                      )}\n                    </div>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n        </TableBody>\n      </Table>\n    </TooltipProvider>\n\n     {/* Code Editor Dialog */}\n     {selectedStrategyForEditor && (\n       <StrategyCodeEditorDialog\n         isOpen={isEditorOpen}\n         onOpenChange={setIsEditorOpen}\n         strategy={selectedStrategyForEditor}\n       />\n     )}\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1883, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1915, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2068, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2260, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2296, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/strategies/_components/automated-generation-form.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Loader2, AlertTriangle } from \"lucide-react\"; // Added AlertTriangle\nimport { toast } from \"@/hooks/use-toast\";\nimport {\n  suggestStrategyConfig,\n  generateAndTestStrategyFromSuggestion,\n  scheduleStrategyGeneration,\n  Strategy\n} from '@/services/strategies-service'; // Import service functions\nimport { SuggestStrategyConfigInput, SuggestStrategyConfigOutput } from '@/ai/flows/suggest-strategy-config'; // Keep type import\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card'; // Import Card components\nimport { Badge } from '@/components/ui/badge'; // Import Badge\n\nconst formSchema = z.object({\n  marketConditions: z.string().min(3, { message: \"Market conditions must be at least 3 characters.\" }).describe(\"Current market conditions (e.g., bullish, bearish, volatile)\"),\n  riskTolerance: z.enum([\"low\", \"medium\", \"high\"]).describe(\"User's risk tolerance level\"),\n  historicalDataInput: z.string().optional().describe(\"Paste historical performance data (JSON format) or leave blank to use default examples\"), // Clarified description\n  generationSchedule: z.enum([\"manual\", \"daily\", \"weekly\", \"startup\"]).default(\"manual\"),\n  autoDeploy: z.boolean().default(false),\n  customPrompt: z.string().optional().describe(\"Optional: Add custom instructions for the AI\"),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\n// Define default historical data used if input is blank\nconst defaultHistoricalData = JSON.stringify([\n    { strategy: \"Example Momentum\", profitFactor: 1.8, drawdown: 15, winRate: 60 },\n    { strategy: \"Example Mean Reversion\", profitFactor: 1.5, drawdown: 10, winRate: 55 },\n    { strategy: \"Example Trend Following\", profitFactor: 2.1, drawdown: 20, winRate: 68 },\n], null, 2); // Pretty-print for readability if someone inspects\n\ninterface AutomatedGenerationFormProps {\n    onStrategyGenerated: (newStrategy: Strategy) => void; // Callback prop\n}\n\n// Enum for loading states\nenum GenerationState {\n    IDLE = 'idle',\n    SUGGESTING = 'suggesting',\n    GENERATING = 'generating', // Represents coding and backtesting phase\n}\n\n\nexport function AutomatedGenerationForm({ onStrategyGenerated }: AutomatedGenerationFormProps) {\n  const [generationState, setGenerationState] = useState<GenerationState>(GenerationState.IDLE);\n  const [suggestedConfig, setSuggestedConfig] = useState<SuggestStrategyConfigOutput | null>(null); // Use the specific type\n  const [generationError, setGenerationError] = useState<string | null>(null); // Store specific error message\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      marketConditions: \"\",\n      riskTolerance: \"medium\",\n      historicalDataInput: \"\", // Keep empty by default\n      generationSchedule: \"manual\",\n      autoDeploy: false,\n      customPrompt: \"\",\n    },\n  });\n\n  const isProcessing = generationState !== GenerationState.IDLE;\n\n\n  async function onSubmit(values: FormData) {\n    setGenerationState(GenerationState.SUGGESTING);\n    setSuggestedConfig(null); // Clear previous suggestions\n    setGenerationError(null); // Clear previous errors\n\n    console.log(\"Form submitted:\", values);\n\n    let historicalDataToUse = values.historicalDataInput || defaultHistoricalData;\n    // Basic validation attempt for pasted JSON\n    try {\n        JSON.parse(historicalDataToUse);\n    } catch (e) {\n        toast({\n            title: \"Invalid Historical Data\",\n            description: \"The provided historical data is not valid JSON. Using default example data instead.\",\n            variant: \"destructive\",\n        });\n        historicalDataToUse = defaultHistoricalData;\n        form.setValue(\"historicalDataInput\", \"\"); // Clear the invalid input\n    }\n\n    // Check if this is a scheduled generation\n    const isScheduled = values.generationSchedule !== 'manual';\n\n    try {\n      // 1. Get Suggestion from AI\n      const suggestionInput: SuggestStrategyConfigInput = {\n        marketConditions: values.marketConditions,\n        riskTolerance: values.riskTolerance,\n        historicalPerformanceData: historicalDataToUse,\n        // customPrompt is not used by the flow currently\n      };\n\n      console.log(\"Calling suggestStrategyConfig with input:\", suggestionInput);\n      const suggestionResult = await suggestStrategyConfig(suggestionInput);\n      console.log(\"Genkit suggestion result:\", suggestionResult);\n      setSuggestedConfig(suggestionResult); // Store the suggestion\n\n      // If this is a scheduled generation, use the scheduling service\n      if (isScheduled) {\n        const generationConfig = {\n          marketConditions: values.marketConditions,\n          riskTolerance: values.riskTolerance,\n          historicalData: historicalDataToUse,\n          customPrompt: values.customPrompt,\n          autoDeploy: values.autoDeploy,\n          suggestedConfig: suggestionResult\n        };\n        \n        const result = await scheduleStrategyGeneration(values.generationSchedule, generationConfig);\n        \n        toast({\n          title: \"Strategy Generation Scheduled\",\n          description: `Strategy generation has been scheduled with ${values.generationSchedule} frequency.`,\n          variant: \"default\",\n        });\n        setGenerationState(GenerationState.IDLE);\n        return;\n      }\n\n      toast({\n        title: \"Strategy Suggestion Ready\",\n        description: `AI suggested '${suggestionResult.strategyName}'. Now attempting generation & backtesting...`,\n      });\n\n      // 2. Attempt Generation & Backtesting (using the service function)\n      setGenerationState(GenerationState.GENERATING); // Update state\n       // Pass autoDeploy preference if needed by the service function\n      const newStrategy = await generateAndTestStrategyFromSuggestion(suggestionResult /*, values.autoDeploy */);\n\n      if (newStrategy) {\n         toast({\n            title: \"New Strategy Generated!\",\n            description: `Successfully generated and backtested '${newStrategy.name}'.`,\n            variant: \"default\",\n          });\n          onStrategyGenerated(newStrategy); // Call the callback with the new strategy\n          // Optionally reset parts of the form?\n          // form.resetField(\"marketConditions\");\n          setSuggestedConfig(null); // Clear suggestion after success\n      } else {\n           const failureMsg = `The suggested strategy '${suggestionResult.strategyName}' did not pass backtesting or encountered an error during generation.`;\n           setGenerationError(failureMsg);\n           toast({\n            title: \"Strategy Generation Failed\",\n            description: failureMsg,\n            variant: \"destructive\",\n          });\n      }\n\n    } catch (error: any) { // Catch specific error type if possible\n      console.error(\"Error during strategy generation process:\", error);\n      const errorMessage = error.message || \"An unknown error occurred.\";\n       setGenerationError(`Failed to generate or suggest strategy: ${errorMessage}`);\n      toast({\n        title: \"Generation Process Error\",\n        description: `Failed to generate or suggest strategy: ${errorMessage}`,\n        variant: \"destructive\",\n      });\n       setSuggestedConfig(null); // Clear suggestion on error\n    } finally {\n      setGenerationState(GenerationState.IDLE); // Return to idle state\n    }\n  }\n\n  return (\n    <>\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"marketConditions\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Current Market Conditions</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"e.g., Bullish, Volatile, Sideways\" {...field} disabled={isProcessing}/>\n                </FormControl>\n                <FormDescription>Describe the current market environment.</FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"riskTolerance\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Risk Tolerance</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value} disabled={isProcessing}>\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select risk level\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"low\">Low</SelectItem>\n                    <SelectItem value=\"medium\">Medium</SelectItem>\n                    <SelectItem value=\"high\">High</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormDescription>Your comfort level with potential losses.</FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n         <FormField\n            control={form.control}\n            name=\"historicalDataInput\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Historical Performance Data (Optional)</FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder={`Paste JSON data here, e.g., ${JSON.stringify(JSON.parse(defaultHistoricalData)[0])} ... or leave blank to use default examples.`}\n                    className=\"min-h-[100px] font-mono text-xs\" // Use mono font for JSON\n                    {...field}\n                    disabled={isProcessing}\n                  />\n                </FormControl>\n                <FormDescription>Provide past strategy results (JSON format) for better suggestions. If blank, example data will be used.</FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n           <FormField\n            control={form.control}\n            name=\"generationSchedule\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Generation Schedule</FormLabel>\n                 <Select onValueChange={field.onChange} defaultValue={field.value} disabled={isProcessing}>\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select schedule\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"manual\">Manual Trigger</SelectItem>\n                    <SelectItem value=\"startup\">On Startup</SelectItem>\n                    <SelectItem value=\"daily\">Daily</SelectItem>\n                    <SelectItem value=\"weekly\">Weekly</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormDescription>How often the agent should attempt generation. Scheduled options will run automatically at the specified intervals.</FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n           <FormField\n            control={form.control}\n            name=\"autoDeploy\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4 mt-8 md:mt-0\">\n                <div className=\"space-y-0.5\">\n                  <FormLabel className=\"text-base\">\n                    Auto-Deploy Successful Strategies\n                  </FormLabel>\n                  <FormDescription>\n                    Automatically activate generated strategies that pass backtesting. (Use with caution - Requires backend support).\n                  </FormDescription>\n                </div>\n                <FormControl>\n                  <Switch\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                    aria-readonly // Mark as potentially not fully functional yet\n                    disabled={isProcessing}\n                  />\n                </FormControl>\n                 <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n         <FormField\n            control={form.control}\n            name=\"customPrompt\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Custom Instructions (Optional)</FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder=\"e.g., Focus on high-frequency strategies, avoid crypto assets, prioritize low drawdown...\"\n                    {...field}\n                    disabled // Mark as not currently used by the flow\n                  />\n                </FormControl>\n                <FormDescription>Add specific guidance for the AI (Note: Custom instructions are not currently implemented in the AI flow).</FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n\n        <Button type=\"submit\" disabled={isProcessing}>\n          {generationState === GenerationState.SUGGESTING ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Getting Suggestion...\n            </>\n          ) : generationState === GenerationState.GENERATING ? (\n             <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Generating & Testing...\n            </>\n          ) : (\n            \"Suggest & Test Strategy\" // Updated button text\n          )}\n        </Button>\n      </form>\n    </Form>\n\n     {/* Display Suggested Configuration or Error */}\n      {suggestedConfig && (\n        <Card className=\"mt-6 border-dashed border-accent animate-fade-in\">\n          <CardHeader>\n            <CardTitle>AI Strategy Suggestion</CardTitle>\n            <CardDescription>Based on your input, the AI suggested the following configuration:</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n             <div>\n                <h4 className=\"font-semibold\">Strategy Name:</h4>\n                <p className=\"text-muted-foreground\">{suggestedConfig.strategyName}</p>\n            </div>\n             <div>\n                <h4 className=\"font-semibold\">Configuration Options (Example):</h4>\n                <pre className=\"mt-1 whitespace-pre-wrap rounded-md bg-muted p-3 text-sm font-mono\">\n                    {JSON.stringify(suggestedConfig.configurationOptions, null, 2)}\n                </pre>\n            </div>\n             <div className=\"grid grid-cols-2 gap-4\">\n                 <div>\n                    <h4 className=\"font-semibold\">Expected Return:</h4>\n                    <p className=\"text-muted-foreground\">{suggestedConfig.expectedReturn}%</p>\n                 </div>\n                 <div>\n                    <h4 className=\"font-semibold\">Suggested Risk Level:</h4>\n                     <Badge variant={suggestedConfig.riskLevel === 'low' ? 'default' : suggestedConfig.riskLevel === 'medium' ? 'secondary' : 'destructive'}>\n                         {suggestedConfig.riskLevel.charAt(0).toUpperCase() + suggestedConfig.riskLevel.slice(1)}\n                     </Badge>\n                 </div>\n             </div>\n             {generationState === GenerationState.GENERATING && ( // Show spinner only when processing this suggestion\n                 <div className=\"flex items-center text-muted-foreground pt-2\">\n                     <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                     <span>Attempting to code, debug, and backtest this suggestion...</span>\n                 </div>\n             )}\n              {/* Show error if generation failed *after* suggestion */}\n             {generationState === GenerationState.IDLE && generationError && suggestedConfig && (\n                  <div className=\"flex items-center text-destructive pt-2\">\n                     <AlertTriangle className=\"mr-2 h-4 w-4\" />\n                     <span>{generationError}</span>\n                 </div>\n             )}\n             {/* Show generic message after completion if no specific error shown */}\n             {generationState === GenerationState.IDLE && !generationError && suggestedConfig && (\n                 <p className=\"text-xs text-muted-foreground pt-2\">\n                     Processing complete. Check notifications and the strategy list for results.\n                 </p>\n            )}\n          </CardContent>\n        </Card>\n      )}\n        {/* Show initial error if suggestion itself failed */}\n        {generationState === GenerationState.IDLE && generationError && !suggestedConfig && (\n            <div className=\"flex items-center text-destructive pt-4 mt-4 border-t\">\n                <AlertTriangle className=\"mr-2 h-5 w-5\" />\n                <span>{generationError}</span>\n            </div>\n        )}\n\n        {/* Add animation utility if not already present */}\n        <style jsx global>{`\n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(-10px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        .animate-fade-in {\n            animation: fadeIn 0.5s ease-out forwards;\n        }\n        `}</style>\n      </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3218, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/strategies/_components/add-strategy-form.tsx"],"sourcesContent":["// src/app/strategies/_components/add-strategy-form.tsx\n'use client';\n\nimport { useState, useRef } from 'react'; // Import useRef\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Loader2, Upload } from \"lucide-react\";\nimport { toast } from \"@/hooks/use-toast\";\nimport { addStrategyWithFile, Strategy } from '@/services/strategies-service'; // Import updated service function\nimport { cn } from '@/lib/utils'; // Ensure cn is imported\n\n// Schema validation\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_FILE_TYPES = [\"text/x-python\", \"application/x-python-code\", \"text/plain\", \"\"]; // Allow empty type for some browser variations\n\n// Use z.any() for server-side compatibility, refinements handle client-side checks\nconst formSchema = z.object({\n  name: z.string().min(3, { message: \"Strategy name must be at least 3 characters.\" }),\n  description: z.string().min(10, { message: \"Description must be at least 10 characters.\" }),\n  strategyFile: z.any() // Use z.any() to avoid SSR error with FileList\n    .refine((files): files is FileList => typeof window !== 'undefined' && files instanceof FileList && files.length > 0, \"Python file is required.\") // Check instance and length client-side\n    .refine((files: FileList) => files?.[0]?.size <= MAX_FILE_SIZE, `Max file size is 5MB.`)\n    .refine(\n      (files: FileList) => ACCEPTED_FILE_TYPES.includes(files?.[0]?.type),\n      \".py file type is required.\"\n    ),\n});\n\n\ntype FormData = z.infer<typeof formSchema>;\n\ninterface AddStrategyFormProps {\n  onStrategyAdded: (newStrategy: Strategy) => void; // Callback on success\n}\n\nexport function AddStrategyForm({ onStrategyAdded }: AddStrategyFormProps) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [fileName, setFileName] = useState<string | null>(null);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      description: \"\",\n      strategyFile: undefined,\n    },\n     mode: \"onChange\", // Validate on change for better file feedback\n  });\n\n  const { register, handleSubmit, control, formState: { errors }, setValue, reset } = form;\n\n  // Get register props for the file input\n  const fileRef = register(\"strategyFile\");\n\n  // Handle file selection to display filename and update form state\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (files && files.length > 0) {\n      setFileName(files[0].name);\n      setValue(\"strategyFile\", files, { shouldValidate: true }); // Update RHF state\n    } else {\n      setFileName(null);\n      setValue(\"strategyFile\", undefined, { shouldValidate: true }); // Reset RHF state\n    }\n  };\n\n\n  async function onSubmit(values: FormData) {\n    setIsSubmitting(true);\n    // FileList should contain the file due to client-side refinement\n    const file = values.strategyFile[0];\n\n     // Basic client-side file reading is not needed here as the service mock doesn't use it.\n     // In a real app, you might read it or send FormData.\n\n       try {\n          // Call the service function (currently mock)\n          // Pass basic info + filename. Real app needs backend for file storage/processing.\n          const newStrategy = await addStrategyWithFile({\n              name: values.name,\n              description: values.description,\n              fileName: file.name,\n          });\n\n          toast({\n              title: \"Strategy Added\",\n              description: `Strategy \"${newStrategy.name}\" has been added (file upload simulated).`,\n          });\n          onStrategyAdded(newStrategy); // Call the success callback\n          reset(); // Reset form fields using RHF's reset\n          setFileName(null); // Clear file name display\n\n        } catch (error: any) {\n          console.error(\"Error adding strategy:\", error);\n          toast({\n              title: \"Error Adding Strategy\",\n              description: error.message || \"Could not add the strategy. Please try again.\",\n              variant: \"destructive\",\n          });\n        } finally {\n          setIsSubmitting(false);\n        }\n  }\n\n  return (\n    <Form {...form}>\n      {/* Use onSubmit from RHF's handleSubmit */}\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={control} // Use control for structure\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Strategy Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"e.g., My Custom EMA Cross\" {...field} disabled={isSubmitting} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={control} // Use control for structure\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea placeholder=\"Describe the strategy's logic, markets, timeframe...\" {...field} disabled={isSubmitting} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n         <FormField\n            control={control} // Use control for structure\n            name=\"strategyFile\" // RHF knows this field\n            render={({ field }) => ( // 'field' is managed by RHF Controller, but we use register for props\n            <FormItem>\n              <FormLabel>Strategy File (.py)</FormLabel>\n              <FormControl>\n                {/* Custom file input styling */}\n                <div className=\"relative\">\n                   <Input\n                      id=\"strategyFile\"\n                      type=\"file\"\n                      accept=\".py,text/x-python,application/x-python-code\"\n                      className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\" // Hide default input\n                      disabled={isSubmitting}\n                      {...fileRef} // Spread the register props (name, ref, onChange)\n                      onChange={(e) => {\n                           fileRef.onChange(e); // Call RHF's internal onChange\n                           handleFileChange(e); // Call our custom handler\n                      }}\n                    />\n                    <label\n                        htmlFor=\"strategyFile\"\n                        className={cn(\n                            \"flex items-center justify-center w-full h-10 px-3 py-2 text-sm border border-input rounded-md cursor-pointer bg-background hover:bg-accent hover:text-accent-foreground\",\n                            isSubmitting && \"cursor-not-allowed opacity-50\",\n                             errors.strategyFile && \"border-destructive text-destructive\" // Indicate error on the label\n                        )}\n                    >\n                        <Upload className=\"mr-2 h-4 w-4\" />\n                        <span>{fileName || \"Choose Lumibot Python file...\"}</span>\n                    </label>\n                </div>\n              </FormControl>\n              <FormDescription>\n                Upload a Python file compatible with the Lumibot framework. Max 5MB.\n              </FormDescription>\n              {/* FormMessage will display errors based on RHF state */}\n              <FormMessage />\n            </FormItem>\n           )}\n         />\n        <Button type=\"submit\" disabled={isSubmitting} className=\"w-full sm:w-auto\">\n          {isSubmitting ? (\n            <>\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              Adding Strategy...\n            </>\n          ) : (\n            \"Add Strategy\"\n          )}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AAGvD,oVAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAAA;AACA;AACA,+OAA+E,kCAAkC;AACjH,wMAAkC,wBAAwB;AArB1D;;;;;;;;;;;;;;AAuBA,oBAAoB;AACpB,MAAM,gBAAgB,IAAI,OAAO,MAAM,MAAM;AAC7C,MAAM,sBAAsB;IAAC;IAAiB;IAA6B;IAAc;CAAG,EAAE,+CAA+C;AAE7I,mFAAmF;AACnF,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA+C;IAClF,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;QAAE,SAAS;IAA8C;IACzF,cAAc,oIAAA,CAAA,IAAC,CAAC,GAAG,GAAG,+CAA+C;KAClE,MAAM,CAAC,CAAC,QAA6B,gBAAkB,eAAe,iBAAiB,YAAY,MAAM,MAAM,GAAG,GAAG,4BAA4B,wCAAwC;KACzL,MAAM,CAAC,CAAC,QAAoB,OAAO,CAAC,EAAE,EAAE,QAAQ,eAAe,CAAC,qBAAqB,CAAC,EACtF,MAAM,CACL,CAAC,QAAoB,oBAAoB,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,OAC9D;AAEN;AASO,SAAS,gBAAgB,EAAE,eAAe,EAAwB;IACvE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAExD,MAAM,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAY;QAC7B,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,MAAM;YACN,aAAa;YACb,cAAc;QAChB;QACC,MAAM;IACT;IAEA,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG;IAEpF,wCAAwC;IACxC,MAAM,UAAU,SAAS;IAEzB,kEAAkE;IAClE,MAAM,mBAAmB,CAAC;QACxB,MAAM,QAAQ,MAAM,MAAM,CAAC,KAAK;QAChC,IAAI,SAAS,MAAM,MAAM,GAAG,GAAG;YAC7B,YAAY,KAAK,CAAC,EAAE,CAAC,IAAI;YACzB,SAAS,gBAAgB,OAAO;gBAAE,gBAAgB;YAAK,IAAI,mBAAmB;QAChF,OAAO;YACL,YAAY;YACZ,SAAS,gBAAgB,WAAW;gBAAE,gBAAgB;YAAK,IAAI,kBAAkB;QACnF;IACF;IAGA,eAAe,SAAS,MAAgB;QACtC,gBAAgB;QAChB,iEAAiE;QACjE,MAAM,OAAO,OAAO,YAAY,CAAC,EAAE;QAElC,wFAAwF;QACxF,qDAAqD;QAEnD,IAAI;YACD,6CAA6C;YAC7C,kFAAkF;YAClF,MAAM,cAAc,MAAM,CAAA,GAAA,wIAAA,CAAA,sBAAmB,AAAD,EAAE;gBAC1C,MAAM,OAAO,IAAI;gBACjB,aAAa,OAAO,WAAW;gBAC/B,UAAU,KAAK,IAAI;YACvB;YAEA,CAAA,GAAA,4HAAA,CAAA,QAAK,AAAD,EAAE;gBACF,OAAO;gBACP,aAAa,CAAC,UAAU,EAAE,YAAY,IAAI,CAAC,yCAAyC,CAAC;YACzF;YACA,gBAAgB,cAAc,4BAA4B;YAC1D,SAAS,sCAAsC;YAC/C,YAAY,OAAO,0BAA0B;QAE/C,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,0BAA0B;YACxC,CAAA,GAAA,4HAAA,CAAA,QAAK,AAAD,EAAE;gBACF,OAAO;gBACP,aAAa,MAAM,OAAO,IAAI;gBAC9B,SAAS;YACb;QACF,SAAU;YACR,gBAAgB;QAClB;IACN;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBAEZ,cAAA,8OAAC;YAAK,UAAU,aAAa;YAAW,WAAU;;8BAChD,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS;oBACT,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,iIAAA,CAAA,QAAK;wCAAC,aAAY;wCAA6B,GAAG,KAAK;wCAAE,UAAU;;;;;;;;;;;8CAEtE,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,gIAAA,CAAA,YAAS;oBACR,SAAS;oBACT,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CACV,cAAA,8OAAC,oIAAA,CAAA,WAAQ;wCAAC,aAAY;wCAAwD,GAAG,KAAK;wCAAE,UAAU;;;;;;;;;;;8CAEpG,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIjB,8OAAC,gIAAA,CAAA,YAAS;oBACP,SAAS;oBACT,MAAK,eAAe,uBAAuB;;oBAC3C,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAClB,8OAAC,gIAAA,CAAA,WAAQ;;8CACP,8OAAC,gIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,8OAAC,gIAAA,CAAA,cAAW;8CAEV,cAAA,8OAAC;wCAAI,WAAU;;0DACZ,8OAAC,iIAAA,CAAA,QAAK;gDACH,IAAG;gDACH,MAAK;gDACL,QAAO;gDACP,WAAU,0DAA0D,qBAAqB;;gDACzF,UAAU;gDACT,GAAG,OAAO;gDACX,UAAU,CAAC;oDACN,QAAQ,QAAQ,CAAC,IAAI,+BAA+B;oDACpD,iBAAiB,IAAI,0BAA0B;gDACpD;;;;;;0DAEF,8OAAC;gDACG,SAAQ;gDACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,2KACA,gBAAgB,iCACf,OAAO,YAAY,IAAI,sCAAsC,8BAA8B;;;kEAGhG,8OAAC,sMAAA,CAAA,SAAM;wDAAC,WAAU;;;;;;kEAClB,8OAAC;kEAAM,YAAY;;;;;;;;;;;;;;;;;;;;;;;8CAI7B,8OAAC,gIAAA,CAAA,kBAAe;8CAAC;;;;;;8CAIjB,8OAAC,gIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,8OAAC,kIAAA,CAAA,SAAM;oBAAC,MAAK;oBAAS,UAAU;oBAAc,WAAU;8BACrD,6BACC;;0CACE,8OAAC,iNAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;4BAA8B;;uCAInD;;;;;;;;;;;;;;;;;AAMZ","debugId":null}},
    {"offset": {"line": 3556, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/strategies/_components/add-strategy-dialog.tsx"],"sourcesContent":["// src/app/strategies/_components/add-strategy-dialog.tsx\n'use client';\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"@/components/ui/dialog\";\nimport { AddStrategyForm } from \"./add-strategy-form\";\nimport type { Strategy } from '@/services/strategies-service';\n\ninterface AddStrategyDialogProps {\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  onStrategyAdded: (newStrategy: Strategy) => void;\n}\n\nexport function AddStrategyDialog({ isOpen, onOpenChange, onStrategyAdded }: AddStrategyDialogProps) {\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[525px]\">\n        <DialogHeader>\n          <DialogTitle>Add New Strategy</DialogTitle>\n          <DialogDescription>\n            Fill in the details below or upload a Python file (.py) following the Lumibot framework.\n            Note: Backend file storage and validation are required for uploaded files to function fully.\n          </DialogDescription>\n        </DialogHeader>\n        <AddStrategyForm onStrategyAdded={onStrategyAdded} />\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"AAAA,yDAAyD;;;;;AAGzD;AAOA;AATA;;;;AAkBO,SAAS,kBAAkB,EAAE,MAAM,EAAE,YAAY,EAAE,eAAe,EAA0B;IACjG,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,8OAAC,kIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,8OAAC,kIAAA,CAAA,eAAY;;sCACX,8OAAC,kIAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,8OAAC,kIAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAKrB,8OAAC,mKAAA,CAAA,kBAAe;oBAAC,iBAAiB;;;;;;;;;;;;;;;;;AAI1C","debugId":null}},
    {"offset": {"line": 3621, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3666, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/Algoace/src/app/strategies/page.tsx"],"sourcesContent":["// src/app/strategies/page.tsx\n'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { PlusCircle, Loader2, AlertTriangle, Archive, EyeOff } from \"lucide-react\"; // Added Archive, EyeOff\nimport { StrategyTable } from './_components/strategy-table';\nimport { AutomatedGenerationForm } from './_components/automated-generation-form';\nimport { AddStrategyDialog } from './_components/add-strategy-dialog';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { getStrategies, Strategy } from '@/services/strategies-service';\nimport { Checkbox } from '@/components/ui/checkbox'; // Import Checkbox\nimport { Label } from '@/components/ui/label'; // Import Label\n\nexport default function StrategiesPage() {\n    const { toast } = useToast();\n    const [allStrategies, setAllStrategies] = useState<Strategy[]>([]); // Store all including archived\n    const [filteredStrategies, setFilteredStrategies] = useState<Strategy[]>([]); // Displayed list\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n    const [showArchived, setShowArchived] = useState(false);\n\n    const loadStrategies = useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            // Always fetch all strategies now\n            const fetchedStrategies = await getStrategies(true); // Pass true to include archived\n            setAllStrategies(fetchedStrategies);\n            // Apply filter based on current state\n            setFilteredStrategies(\n                showArchived\n                    ? fetchedStrategies\n                    : fetchedStrategies.filter(s => s.status !== 'Archived')\n            );\n        } catch (err) {\n            console.error(\"Failed to fetch strategies:\", err);\n            setError(\"Failed to load strategies. Please try again later.\");\n            toast({\n                title: \"Error Loading Strategies\",\n                description: err instanceof Error ? err.message : \"Could not fetch strategy list.\",\n                variant: \"destructive\",\n            });\n        } finally {\n            setIsLoading(false);\n        }\n    }, [toast, showArchived]); // Depend on showArchived\n\n    useEffect(() => {\n        loadStrategies();\n    }, [loadStrategies]); // Load when component mounts or loadStrategies changes\n\n    // Filter strategies whenever showArchived changes\n    useEffect(() => {\n         setFilteredStrategies(\n            showArchived\n                ? allStrategies\n                : allStrategies.filter(s => s.status !== 'Archived')\n         );\n    }, [showArchived, allStrategies]);\n\n    const handleAddNewStrategy = () => {\n        setIsAddDialogOpen(true);\n    };\n\n    // Handles both updates and archiving (which is just a status update)\n    const handleStrategyUpdate = useCallback((updatedStrategy: Strategy) => {\n        setAllStrategies(prevStrategies =>\n            prevStrategies.map(s => s.id === updatedStrategy.id ? updatedStrategy : s)\n        );\n         // Re-filtering will happen automatically due to the useEffect dependency on allStrategies\n    }, []);\n\n    const handleStrategyDelete = useCallback((deletedStrategyId: string) => {\n        setAllStrategies(prevStrategies =>\n            prevStrategies.filter(s => s.id !== deletedStrategyId)\n        );\n         // Re-filtering will happen automatically\n    }, []);\n\n    const handleStrategyAdded = useCallback((newStrategy: Strategy) => {\n        // Add to the main list, filter will apply automatically\n        setAllStrategies(prevStrategies => [newStrategy, ...prevStrategies]);\n        setIsAddDialogOpen(false);\n         toast({\n            title: \"Strategy Added\",\n            description: `New strategy \"${newStrategy.name}\" added.`,\n         });\n    }, [toast]);\n\n\n    const renderStrategyTable = () => {\n        if (isLoading) {\n            return (\n                <div className=\"flex justify-center items-center h-40\">\n                    <Loader2 className=\"h-8 w-8 animate-spin text-muted-foreground\" />\n                    <span className=\"ml-2 text-muted-foreground\">Loading strategies...</span>\n                </div>\n            );\n        }\n\n        if (error) {\n            return (\n                <div className=\"flex flex-col items-center justify-center h-40 text-destructive\">\n                    <AlertTriangle className=\"h-8 w-8 mb-2\" />\n                    <p>{error}</p>\n                    <Button onClick={loadStrategies} variant=\"outline\" className=\"mt-4\">Retry</Button>\n                </div>\n            );\n        }\n\n        return (\n            <StrategyTable\n                strategies={filteredStrategies} // Pass the filtered list\n                onStrategyUpdate={handleStrategyUpdate}\n                onStrategyDelete={handleStrategyDelete}\n             />\n        );\n    };\n\n  return (\n    <>\n      <div className=\"space-y-6\">\n        {/* Strategy List Card */}\n        <Card>\n          <CardHeader className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between space-y-2 sm:space-y-0 pb-4\">\n            <div>\n              <CardTitle>Manage Strategies</CardTitle>\n              <CardDescription>View, manage, add, and interact with trading strategies.</CardDescription>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n                <div className=\"flex items-center space-x-2 mr-2\">\n                     <Checkbox\n                         id=\"show-archived\"\n                         checked={showArchived}\n                         onCheckedChange={(checked) => setShowArchived(Boolean(checked))}\n                         disabled={isLoading}\n                     />\n                     <Label htmlFor=\"show-archived\" className=\"text-sm text-muted-foreground flex items-center gap-1\">\n                        {showArchived ? <EyeOff className=\"h-4 w-4\" /> : <Archive className=\"h-4 w-4\" />}\n                        Show Archived\n                     </Label>\n                 </div>\n                 <Button size=\"sm\" onClick={handleAddNewStrategy} disabled={isLoading}>\n                  <PlusCircle className=\"mr-2 h-4 w-4\" /> Add New Strategy\n                 </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            {renderStrategyTable()}\n          </CardContent>\n        </Card>\n\n        {/* Automated Generation Card */}\n        <Card id=\"automated-generation\">\n          <CardHeader>\n            <CardTitle>Automated Strategy Generation</CardTitle>\n            <CardDescription>Configure the AI agent to suggest, generate, and test new strategies.</CardDescription>\n          </CardHeader>\n          <CardContent>\n             <AutomatedGenerationForm onStrategyGenerated={handleStrategyAdded} />\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Add Strategy Dialog */}\n      <AddStrategyDialog\n        isOpen={isAddDialogOpen}\n        onOpenChange={setIsAddDialogOpen}\n        onStrategyAdded={handleStrategyAdded}\n      />\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}